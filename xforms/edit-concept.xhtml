<html xmlns="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xforms="http://www.w3.org/2002/xforms"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xxf="http://orbeon.org/oxf/xml/xforms" 
	xmlns:fr="http://orbeon.org/oxf/xml/form-runner" xmlns:res="http://www.w3.org/2005/sparql-results#" xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:dcterms="http://purl.org/dc/terms/" xmlns:nm="http://nomisma.org/id/" xmlns:foaf="http://xmlns.com/foaf/0.1/"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:skos="http://www.w3.org/2004/02/skos/core#"
	xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#" xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
	xmlns:un="http://www.owl-ontologies.com/Ontology1181490123.owl#" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:nomisma="https://github.com/nomisma"
	xmlns:rdac="http://www.rdaregistry.info/Elements/c/" xmlns:osgeo="http://data.ordnancesurvey.co.uk/ontology/geometry/"
	xmlns:nmo="http://nomisma.org/ontology#" xmlns:org="http://www.w3.org/ns/org#" xmlns:bio="http://purl.org/vocab/bio/0.1/"
	xmlns:crm="http://www.cidoc-crm.org/cidoc-crm/" xmlns:prov="http://www.w3.org/ns/prov#" xmlns:crmdig="http://www.ics.forth.gr/isl/CRMdig/"
	xmlns:wordnet="http://ontologi.es/WordNet/class/">
	<head>
		<title>nomisma.org: edit</title>
		<link rel="stylesheet" href="/fr/style/bootstrap/css/bootstrap.css" type="text/css" />
		<link rel="stylesheet" href="/fr/style/form-runner-bootstrap-override.css" type="text/css" />

		<link rel="stylesheet" href="https://netdna.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" />
		<script type="text/javascript" src="https://netdna.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
		<link rel="shortcut icon" href="/ops/images/orbeon-icon-16.ico" />
		<link rel="icon" href="/ops/images/orbeon-icon-16.png" type="image/png" />
		<link rel="stylesheet" href="/apps/nomisma/xforms/css/style.css" />

		<!-- mapping -->
		<script type="text/javascript" src="https://www.openlayers.org/api/OpenLayers.js"></script>
		<script type="text/javascript" src="https://maps.google.com/maps/api/js?v=3.9&amp;sensor=false"></script>
		<script type="text/javascript" src="/apps/nomisma/xforms/javascript/georeference.js"></script>

		<!-- model -->
		<xforms:model>
			<xforms:instance id="doc" xxf:exclude-result-prefixes="#default xhtml xforms xs ev xxf fr res xi nomisma atom">
				<rdf:RDF xmlns="" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:nm="http://nomisma.org/id/" xmlns:nmo="http://nomisma.org/ontology#"
					xmlns:prov="http://www.w3.org/ns/prov#" xmlns:foaf="http://xmlns.com/foaf/0.1/" xmlns:crm="http://www.cidoc-crm.org/cidoc-crm/"
					xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
					xmlns:skos="http://www.w3.org/2004/02/skos/core#" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
					xmlns:xsd="http://www.w3.org/2001/XMLSchema#" xmlns:un="http://www.owl-ontologies.com/Ontology1181490123.owl#"
					xmlns:osgeo="http://data.ordnancesurvey.co.uk/ontology/geometry/" xmlns:org="http://www.w3.org/ns/org#"
					xmlns:rdac="http://www.rdaregistry.info/Elements/c/" xmlns:bio="http://purl.org/vocab/bio/0.1/"
					xmlns:crmdig="http://www.ics.forth.gr/isl/CRMdig/" xmlns:wordnet="http://ontologi.es/WordNet/class/"/>
			</xforms:instance>

			<xforms:instance id="config" xxf:exclude-result-prefixes="#all">
				<xi:include href="../config.xml"/>
			</xforms:instance>

			<xforms:instance id="control-instance" xxf:exclude-result-prefixes="#all">
				<controls xmlns="">
					<id></id>
					<idValid>false</idValid>
					<uri></uri>
					<username></username>
					<new-id>true</new-id>
					<load-error>false</load-error>
					<save-trigger>false</save-trigger>
					<proceed-trigger>false</proceed-trigger>
					<status></status>
					<type></type>
					<conceptScheme></conceptScheme>
					<conceptScheme_uri></conceptScheme_uri>
					<concept_path></concept_path>
					<labels-visible>false</labels-visible>
					<atom-type></atom-type>
					<atom-search></atom-search>
					<atom-id></atom-id>
					<atom-summary></atom-summary>
					<link-property></link-property>
					<dump></dump>
					<membership-position></membership-position>
					<content_before_hash></content_before_hash>
					<content_after_hash></content_after_hash>
					<session-id></session-id>
					<geo>
						<type></type>
						<hasFeature></hasFeature>
						<lat>0</lat>
						<long>0</long>
						<geoJSON></geoJSON>
					</geo>
					<fons></fons>
				</controls>
			</xforms:instance>

			<xforms:instance id="load-config">
				<config xmlns="">
					<url></url>
					<content-type>application/xml</content-type>
					<mode>xml</mode>
				</config>
			</xforms:instance>

			<xforms:instance id="save-config">
				<config xmlns="">
					<url></url>
					<content-type>text/plain</content-type>
					<make-directories>false</make-directories>
					<append>false</append>
				</config>
			</xforms:instance>

			<xforms:instance id="delete-config">
				<config xmlns="">
					<delete>
						<url></url>
					</delete>
				</config>
			</xforms:instance>

			<xforms:instance id="dump">
				<dump xmlns=""></dump>
			</xforms:instance>

			<xforms:instance id="languages">
				<xi:include href="instances/languages.xml"/>
			</xforms:instance>

			<xforms:instance id="classes">
				<classes xmlns="">
					<class>
						<label>Authenticity</label>
						<type>nmo:Authenticity</type>
					</class>
					<class>
						<label>Collection</label>
						<type>nmo:Collection</type>
					</class>
					<class>
						<label>Coin Wear</label>
						<type>nmo:CoinWear</type>
					</class>
					<class>
						<label>Corrosion</label>
						<type>nmo:Corrosion</type>
					</class>
					<class>
						<label>Deity</label>
						<type>wordnet:Deity</type>
					</class>
					<class>
						<label>Denomination</label>
						<type>nmo:Denomination</type>
					</class>
					<class>
						<label>Dynasty</label>
						<type>rdac:Family</type>
					</class>
					<!--<class>
						<label>Ethnic</label>
						<type>nmo:Ethnic</type>
					</class>-->
					<class>
						<label>Field of Numismatics</label>
						<type>nmo:FieldOfNumismatics</type>
					</class>
					<class>
						<label>Group</label>
						<type>foaf:Group</type>
					</class>
					<class>
						<label>Manufacture</label>
						<type>nmo:Manufacture</type>
					</class>
					<class>
						<label>Material</label>
						<type>nmo:Material</type>
					</class>
					<class>
						<label>Mint</label>
						<type>nmo:Mint</type>
					</class>
					<class>
						<label>Monogram</label>
						<type>nmo:Monogram</type>
					</class>
					<class>
						<label>Numismatic Term</label>
						<type>nmo:NumismaticTerm</type>
					</class>
					<class>
						<label>Object Type</label>
						<type>nmo:ObjectType</type>
					</class>
					<class>
						<label>Organization</label>
						<type>foaf:Organization</type>
					</class>
					<class>
						<label>Peculiarity of Production</label>
						<type>nmo:PeculiarityOfProduction</type>
					</class>
					<class>
						<label>Period</label>
						<type>crm:E4_Period</type>
					</class>
					<class>
						<label>Person</label>
						<type>foaf:Person</type>
					</class>
					<class>
						<label>Reference Work</label>
						<type>nmo:ReferenceWork</type>
					</class>
					<class>
						<label>Region</label>
						<type>nmo:Region</type>
					</class>
					<class>
						<label>Role</label>
						<type>org:Role</type>
					</class>
					<class>
						<label>Secondary Treatment</label>
						<type>nmo:SecondaryTreatment</type>
					</class>
					<class>
						<label>Symbol (E37 Mark)</label>
						<type>crm:E37_Mark</type>
					</class>
					<class>
						<label>Type Series</label>
						<type>nmo:TypeSeries</type>
					</class>
					<class>
						<label>Uncertainty</label>
						<type>un:Uncertainty</type>
					</class>					
				</classes>
			</xforms:instance>

			<xforms:instance id="licenses">
				<licenses xmlns="">
					<statement value="https://creativecommons.org/licenses/by/4.0/">Attribution 4.0 International (CC BY 4.0)</statement>
					<statement value="https://creativecommons.org/licenses/by-sa/4.0/">Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)</statement>
					<statement value="https://creativecommons.org/licenses/by-nd/4.0/">Attribution-NoDerivatives 4.0 International (CC BY-ND 4.0)</statement>
					<statement value="https://creativecommons.org/licenses/by-nc/4.0/">Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)</statement>
					<statement value="https://creativecommons.org/licenses/by-nc-sa/4.0/">Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA
						4.0)</statement>
					<statement value="https://creativecommons.org/licenses/by-nc-nd/4.0/">Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND
						4.0)</statement>
					<statement value="https://creativecommons.org/choose/mark/">Public Domain Mark</statement>
				</licenses>
			</xforms:instance>

			<!-- ******** RDF PROPERTY TEMPLATES ******** -->
			<!-- skos -->
			<xforms:instance id="prefLabel-template" xxf:exclude-result-prefixes="#all">
				<skos:prefLabel xml:lang=""/>
			</xforms:instance>

			<xforms:instance id="altLabel-template" xxf:exclude-result-prefixes="#all">
				<skos:altLabel xml:lang=""/>
			</xforms:instance>

			<xforms:instance id="definition-template" xxf:exclude-result-prefixes="#all">
				<skos:definition xml:lang=""/>
			</xforms:instance>

			<xforms:instance id="closeMatch-template" xxf:exclude-result-prefixes="#all">
				<skos:closeMatch rdf:resource=""/>
			</xforms:instance>

			<xforms:instance id="exactMatch-template" xxf:exclude-result-prefixes="#all">
				<skos:exactMatch rdf:resource=""/>
			</xforms:instance>

			<xforms:instance id="scopeNote-template" xxf:exclude-result-prefixes="#all">
				<skos:scopeNote xml:lang=""/>
			</xforms:instance>

			<!-- other -->
			<xforms:instance id="isPartOf-template" xxf:exclude-result-prefixes="#all">
				<dcterms:isPartOf rdf:resource=""/>
			</xforms:instance>
			<xforms:instance id="source-template" xxf:exclude-result-prefixes="#all">
				<dcterms:source rdf:resource=""/>
			</xforms:instance>

			<xforms:instance id="lat-template" xxf:exclude-result-prefixes="#all">
				<geo:lat rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal"/>
			</xforms:instance>

			<xforms:instance id="long-template" xxf:exclude-result-prefixes="#all">
				<geo:long rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal"/>
			</xforms:instance>

			<xforms:instance id="asGeoJSON-template" xxf:exclude-result-prefixes="#all">
				<osgeo:asGeoJSON/>
			</xforms:instance>

			<xforms:instance id="seeAlso-template" xxf:exclude-result-prefixes="#all">
				<rdfs:seeAlso rdf:resource=""/>
			</xforms:instance>

			<xforms:instance id="memberOf-template" xxf:exclude-result-prefixes="#all">
				<org:memberOf rdf:resource=""/>
			</xforms:instance>

			<xforms:instance id="date-template" xxf:exclude-result-prefixes="#all">
				<nmo:hasDate rdf:datatype="http://www.w3.org/2001/XMLSchema#gYear"/>
			</xforms:instance>

			<xforms:instance id="hasStartDate-template" xxf:exclude-result-prefixes="#all">
				<nmo:hasStartDate rdf:datatype="http://www.w3.org/2001/XMLSchema#gYear"/>
			</xforms:instance>

			<xforms:instance id="hasEndDate-template" xxf:exclude-result-prefixes="#all">
				<nmo:hasEndDate rdf:datatype="http://www.w3.org/2001/XMLSchema#gYear"/>
			</xforms:instance>

			<xforms:instance id="thumbnail-template" xxf:exclude-result-prefixes="#all">
				<foaf:thumbnail rdf:resource=""/>
			</xforms:instance>

			<xforms:instance id="hasUncertainty-template" xxf:exclude-result-prefixes="#all">
				<un:hasUncertainty rdf:resource=""/>
			</xforms:instance>

			<xforms:instance id="uncertain-match-template" xxf:exclude-result-prefixes="#all">
				<skos:related>
					<rdf:Description>
						<rdf:value rdf:resource=""/>
						<un:hasUncertainty rdf:resource="http://nomisma.org/id/uncertain_value"/>
					</rdf:Description>
				</skos:related>
			</xforms:instance>

			<!-- image template for monograms/symbols -->
			<xforms:instance id="image-template" xxf:exclude-result-prefixes="#all">
				<crm:P165i_is_incorporated_in>
					<crmdig:D1_Digital_Object rdf:about="">
						<dcterms:format>image/svg+xml</dcterms:format>
						<dcterms:license rdf:resource="https://creativecommons.org/choose/mark/"/>
					</crmdig:D1_Digital_Object>
				</crm:P165i_is_incorporated_in>
			</xforms:instance>

			<!-- provenance -->
			<xforms:instance id="changeNote-template" xxf:exclude-result-prefixes="#all">
				<skos:changeNote rdf:resource=""/>
			</xforms:instance>

			<xforms:instance id="provenance-template" xxf:exclude-result-prefixes="#all">
				<dcterms:ProvenanceStatement rdf:about="">
					<foaf:topic rdf:resource=""/>
				</dcterms:ProvenanceStatement>
			</xforms:instance>

			<xforms:instance id="activity-template" xxf:exclude-result-prefixes="#all">
				<prov:Activity>
					<prov:atTime rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime"/>
					<prov:wasAssociatedWith rdf:resource=""/>
					<dcterms:type/>
				</prov:Activity>
			</xforms:instance>

			<xforms:instance id="description-template" xxf:exclude-result-prefixes="#all">
				<dcterms:description xml:lang="en"/>
			</xforms:instance>

			<!-- ********** REST RESPONSES ********** -->
			<!-- nomisma Atom -->
			<xforms:instance id="feed">
				<feed xmlns=""></feed>
			</xforms:instance>

			<!-- sparql queries -->
			<xforms:instance id="sparqlQuery">
				<query></query>
			</xforms:instance>

			<!-- preloaded instances -->
			<xforms:instance id="sparqlResponse">
				<sparql xmlns="http://www.w3.org/2005/sparql-results#"/>
			</xforms:instance>

			<!-- sparql update -->
			<xforms:instance id="sparqlUpdate-template">
				<query><![CDATA[PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX crm:	<http://www.cidoc-crm.org/cidoc-crm/>
PREFIX foaf:	<http://xmlns.com/foaf/0.1/>
PREFIX geo:	<http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX nmo:	<http://nomisma.org/ontology#>
PREFIX org:	<http://www.w3.org/ns/org#>
PREFIX prov:	<http://www.w3.org/ns/prov#>
PREFIX skos:	<http://www.w3.org/2004/02/skos/core#>
DELETE {?s ?p ?o} WHERE {
BIND (<URI> as ?concept)
{?prov foaf:topic ?concept .
	?prov ?hasActivity ?s .
	?s a prov:Activity . ?s ?p ?o}
UNION {?concept org:hasMembership|skos:related|crm:P165i_is_incorporated_in|skos:changeNote|geo:location ?s . ?s ?p ?o}
UNION {?concept ?p ?o . ?s ?p ?o . FILTER (?s = ?concept) }
}]]></query>
			</xforms:instance>

			<xforms:instance id="sparqlUpdate">
				<query></query>
			</xforms:instance>

			<!-- lists to populate drop-down menus, derived from SPARQL -->
			<xforms:instance id="uncertainty-list" xxf:exclude-result-prefixes="#all">
				<list xmlns=""></list>
			</xforms:instance>

			<xforms:instance id="role-list" xxf:exclude-result-prefixes="#all">
				<list xmlns=""></list>
			</xforms:instance>

			<xforms:instance id="fon-list" xxf:exclude-result-prefixes="#all">
				<list xmlns=""></list>
			</xforms:instance>

			<!-- list of skos:broader classes for nmo:Mint (for linking a sub-mint/workshop to the primary place entry -->
			<xforms:instance id="broader-mint-list">
				<list xmlns="">
					<item id="nmo:Region">Region</item>
					<item id="nmo:Mint">Mint</item>
				</list>
			</xforms:instance>

			<!-- sparql query templates -->
			<xforms:instance id="sparql-templates">
				<templates xmlns="">
					<prefix><![CDATA[PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dcterms:	<http://purl.org/dc/terms/>
PREFIX skos:	<http://www.w3.org/2004/02/skos/core#>
PREFIX owl:	<http://www.w3.org/2002/07/owl#>
PREFIX foaf:	<http://xmlns.com/foaf/0.1/>
PREFIX geo:	<http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX nm:	<http://nomisma.org/id/>
PREFIX nmo:	<http://nomisma.org/ontology#>
PREFIX org:	<http://www.w3.org/ns/org#>
PREFIX xsd:	<http://www.w3.org/2001/XMLSchema#>
PREFIX un:	<http://www.owl-ontologies.com/Ontology1181490123.owl#>]]></prefix>
					<query id="uncertainty">SELECT ?uri ?label WHERE {?uri a un:Uncertainty ; skos:prefLabel ?label . FILTER(langMatches(lang(?label), "en"))}
						ORDER BY ?label</query>
					<query id="role">SELECT ?uri ?label WHERE {?uri a org:Role ; skos:prefLabel ?label . FILTER(langMatches(lang(?label), "en"))} ORDER BY
						?label</query>
					<query id="fon">SELECT ?uri ?label WHERE {?uri a nmo:FieldOfNumismatics ; skos:prefLabel ?label . FILTER(langMatches(lang(?label), "en"))}
						ORDER BY ?label</query>
				</templates>
			</xforms:instance>

			<!-- Solr instances -->
			<xforms:instance id="addIndex">
				<add xmlns=""></add>
			</xforms:instance>
			<xforms:instance id="sendCommit">
				<commit></commit>
			</xforms:instance>
			<xforms:instance id="deleteId">
				<delete xmlns="">
					<id></id>
				</delete>
			</xforms:instance>

			<!-- **************** BINDINGS ********************** -->
			<xforms:bind nodeset="instance('doc')" id="doc-active" readonly="*[1]/dcterms:isReplacedBy/@rdf:resource">
				<!-- handle top-level rdf:type -->
				<xforms:bind nodeset="*[1]">
					<xforms:bind nodeset="@rdf:about" required="true()" type="xs:anyURI"/>
					<!-- skos -->
					<xforms:bind nodeset="skos:prefLabel" required="true()">
						<xforms:bind nodeset="@xml:lang"
							constraint="string-length(.) &gt; 0 and count(parent::node()/parent::node()/skos:prefLabel[@xml:lang='en']) = 1 and count(parent::node()/parent::node()/skos:prefLabel/@xml:lang) = count(distinct-values(parent::node()/parent::node()/skos:prefLabel/@xml:lang))"
						/>
					</xforms:bind>
					<xforms:bind nodeset="skos:altLabel" required="true()">
						<xforms:bind nodeset="@xml:lang" constraint="string-length(.) &gt; 0"/>
					</xforms:bind>
					<xforms:bind nodeset="skos:definition" required="true()">
						<xforms:bind nodeset="@xml:lang"
							constraint="string-length(.) &gt; 0 and count(parent::node()/parent::node()/skos:definition[@xml:lang='en']) = 1 and count(parent::node()/parent::node()/skos:definition/@xml:lang) = count(distinct-values(parent::node()/parent::node()/skos:definition/@xml:lang))"
						/>
					</xforms:bind>
					<xforms:bind nodeset="skos:scopeNote" required="true()">
						<xforms:bind nodeset="@xml:lang"
							constraint="string-length(.) &gt; 0 and count(parent::node()/parent::node()/skos:scopeNote[@xml:lang='en']) = 1 and count(parent::node()/parent::node()/skos:scopeNote/@xml:lang) = count(distinct-values(parent::node()/parent::node()/skos:scopeNote/@xml:lang))"
						/>
					</xforms:bind>
					<!-- nomisma properties -->
					<xforms:bind nodeset="nmo:hasDate" type="xs:gYear" required="true()"/>
					<xforms:bind nodeset="nmo:hasStartDate" type="xs:gYear" required="true()"/>
					<xforms:bind nodeset="nmo:hasEndDate" type="xs:gYear" required="true()"/>

					<!-- dcterms:isPartOf must be field of numismatics -->
					<xforms:bind nodeset="dcterms:isPartOf" constraint="contains(@rdf:resource, '_numismatics')"/>

					<!-- symbol/monogram properties -->
					<xforms:bind nodeset="crm:P165i_is_incorporated_in">
						<xforms:bind nodeset="crmdig:D1_Digital_Object">
							<xforms:bind nodeset="@rdf:about" required="true()" type="xs:anyURI"
								constraint="matches(., '^https?://(-\.)?([^\s/?\.#]+\.?)+(/[^\s]*)?$')"/>
						</xforms:bind>
					</xforms:bind>
					<xforms:bind nodeset="crm:P190_has_symbolic_content" required="true()" constraint="string-length(normalize-space(.)) = 1"/>

					<!-- @rdf:resource -->
					<xforms:bind nodeset="//@rdf:resource" required="true()" type="xs:anyURI"
						constraint="matches(., '^https?://(-\.)?([^\s/?\.#]+\.?)+(/[^\s]*)?$')"/>
				</xforms:bind>
				<!-- geographic -->
				<xforms:bind nodeset="geo:SpatialThing" constraint="(geo:lat and geo:long) or osgeo:asGeoJSON">
					<xforms:bind nodeset="@rdf:about" required="true()" type="xs:anyURI"/>
					<xforms:bind nodeset="geo:lat" type="xs:decimal" constraint="(number(.) &gt; -180 and number(.) &lt; 180)" id="lat-coord"/>
					<xforms:bind nodeset="geo:long" type="xs:decimal" constraint="(number(.) &gt; -180 and number(.) &lt; 180)"/>
					<xforms:bind nodeset="osgeo:asGeoJSON" constraint="string-length(.) &gt; 0"/>
					<!-- @rdf:resource -->
					<xforms:bind nodeset="//@rdf:resource" required="true()" type="xs:anyURI"/>
				</xforms:bind>
				<xforms:bind nodeset="org:Membership">
					<!-- forbid duplicate URIs for membership -->
					<xforms:bind nodeset="@rdf:about" required="true()" type="xs:anyURI"
						constraint="count(distinct-values(ancestor::rdf:RDF/org:Membership/@rdf:about)) = count(ancestor::rdf:RDF/org:Membership/@rdf:about)"/>
					<xforms:bind nodeset="nmo:hasStartDate" type="xs:gYear" required="true()"/>
					<xforms:bind nodeset="nmo:hasEndDate" type="xs:gYear" required="true()"/>
					<!-- @rdf:resource -->
					<xforms:bind nodeset="//@rdf:resource" required="true()" type="xs:anyURI"/>
				</xforms:bind>
				<xforms:bind nodeset="bio:Birth">
					<xforms:bind nodeset="dcterms:date" type="m.data.standardDate"/>
				</xforms:bind>
				<xforms:bind nodeset="bio:Death">
					<xforms:bind nodeset="dcterms:date" type="m.data.standardDate"/>
				</xforms:bind>
				<xforms:bind nodeset="dcterms:ProvenanceStatement">
					<xforms:bind nodeset="descendant::dcterms:description" required="true()">
						<xforms:bind nodeset="@xml:lang" required="true()"/>
					</xforms:bind>
				</xforms:bind>
			</xforms:bind>

			<xforms:bind nodeset="instance('control-instance')">
				<xforms:bind nodeset="id" required="true()" constraint="matches(., &quot;^([a-zA-Z0-9\-\._\(\)&#x0027;]*)?$&quot;)"
					readonly="../new-id != true()"/>
				<xforms:bind nodeset="idValid" type="xs:boolean"
					calculate="matches(../id, &quot;^([a-zA-Z0-9\-\._\(\)&#x0027;]*)?$&quot;) and string-length(../id) &gt; 0"/>
				<xforms:bind nodeset="new-id" type="xs:boolean"/>
				<xforms:bind nodeset="load-error" type="xs:boolean"/>
				<xforms:bind nodeset="delete-success" type="xs:boolean"/>
				<xforms:bind id="labels-visible" nodeset="labels-visible" type="xs:boolean"/>
				<xforms:bind nodeset="geo">
					<xforms:bind nodeset="type" constraint="string-length(.) &gt; 0"/>
					<xforms:bind nodeset="hasFeature" type="xs:boolean"/>
				</xforms:bind>
				<xforms:bind nodeset="fons">
					<xforms:bind nodeset="fon" required="true()"/>
				</xforms:bind>
				<xforms:bind id="save-trigger" nodeset="save-trigger" type="xs:boolean" readonly=". != true()"/>
				<xforms:bind id="proceed-trigger" nodeset="proceed-trigger" type="xs:boolean" readonly=". != true()"
					calculate="string-length(../type) &gt; 0 and ../idValid = true()"/>
			</xforms:bind>

			<xforms:bind id="deprecate-trigger" readonly="instance('doc')/*[1]/dcterms:isReplacedBy"/>

			<!-- **************** OTHER DATA TYPES ********************** -->
			<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified">
				<xs:simpleType name="m.data.standardDate">
					<xs:union>
						<xs:simpleType>
							<xs:restriction base="xs:date">
								<xs:maxInclusive value="2099-12-31"/>
							</xs:restriction>
						</xs:simpleType>
						<xs:simpleType>
							<xs:restriction base="xs:gYear">
								<xs:maxInclusive value="2099"/>
							</xs:restriction>
						</xs:simpleType>
						<xs:simpleType>
							<xs:restriction base="xs:gYearMonth">
								<xs:maxInclusive value="2099-12"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:union>
				</xs:simpleType>
			</xs:schema>

			<!-- **************** DYNAMIC VALIDATION CONTROLS ********************** -->
			<xforms:action ev:event="xxforms-invalid" ev:observer="doc">
				<xforms:setvalue ref="instance('control-instance')/save-trigger" value="false()"/>
			</xforms:action>

			<xforms:action ev:event="xxforms-valid" ev:observer="doc">
				<!-- force the trigger to be readonly if the ID is deprecated -->
				<xforms:setvalue ref="instance('control-instance')/save-trigger" value="false()" if="instance('doc')/*[1]/dcterms:isReplacedBy"/>
				<xforms:setvalue ref="instance('control-instance')/save-trigger" value="true()" if="not(instance('doc')/*[1]/dcterms:isReplacedBy)"/>
			</xforms:action>

			<!-- ************* QUERY ATOM **********************-->
			<!-- query local atom feed to power skos:broader, dcterms:source and other internal links -->
			<xforms:submission id="query-feed" serialization="none" method="get"
				action="/nomisma/feed/?q=type:{encode-for-uri(normalize-space(instance('control-instance')/atom-type))}+{instance('control-instance')/atom-search}&amp;sort=prefLabel+asc"
				instance="feed" replace="instance">
				<xforms:message ev:event="xforms-submit-error" level="modal">Unable to communicate with nomisma.org Atom feed.</xforms:message>
			</xforms:submission>

			<!-- ************* SPARQL SUBMISSIONS **********************-->
			<!-- SPARQL queries -->
			<xforms:submission id="submit-sparqlQuery" action="{instance('config')/sparql_query}?query={encode-for-uri(instance('sparqlQuery'))}&amp;output=xml"
				ref="instance('sparqlResponse')" replace="instance" method="get">
				<xforms:message ev:event="xforms-submit-error" level="modal">SPARQL query failed.</xforms:message>
			</xforms:submission>

			<xforms:submission id="delete-graph" action="{instance('config')/sparql_update}" ref="instance('sparqlUpdate')" serialization="text/plain"
				replace="none" method="post" mediatype="application/sparql-update">
				<xforms:action ev:event="xforms-submit-error">
					<xforms:message level="modal">SPARQL update failed.</xforms:message>
					<xforms:setvalue ref="instance('control-instance')/delete-success" value="false()"/>
				</xforms:action>
				<xforms:action ev:event="xforms-submit-done">
					<xforms:setvalue ref="instance('control-instance')/delete-success" value="true()"/>
				</xforms:action>
			</xforms:submission>

			<xforms:submission id="post-new" action="{instance('config')/sparql_store}?default" ref="instance('doc')" replace="none" method="post"
				mediatype="application/rdf+xml">
				<xforms:setvalue ev:event="xforms-submit-done" ref="instance('control-instance')/status">Successfully posted to endpoint.</xforms:setvalue>
				<xforms:message ev:event="xforms-submit-error" level="modal">Post to endpoint failed.</xforms:message>
			</xforms:submission>

			<!-- ************************* SOLR SUBMISSIONS ************************** -->
			<!-- post instance to Solr -->
			<xforms:submission id="post-solr-doc" action="{instance('config')/solr_published}update" ref="instance('addIndex')" instance="addIndex"
				replace="instance" method="post">
				<xforms:message ev:event="xforms-submit-error" level="modal">Data Failed to POST to Solr. Index may be offline or URL is
					incorrect.</xforms:message>
				<xforms:action ev:event="xforms-submit-done">
					<xforms:setvalue ref="instance('control-instance')/status">Document successfully saved to Solr.</xforms:setvalue>
					<xforms:send submission="submit-commit"/>
				</xforms:action>

			</xforms:submission>

			<xforms:submission id="delete-id-from-solr" action="{instance('config')/solr_published}update" ref="instance('deleteId')" instance="deleteId"
				replace="instance" method="post">
				<xforms:action ev:event="xforms-submit-error">
					<xforms:message level="modal">Data Failed to POST to Solr. Index may be offline or URL is incorrect.</xforms:message>
					<xforms:setvalue ref="instance('control-instance')/delete-success" value="false()"/>
				</xforms:action>
				<xforms:action ev:event="xforms-submit-done">
					<xforms:send submission="submit-commit"/>
					<xforms:setvalue ref="instance('control-instance')/status">Document successfully deleted from Solr.</xforms:setvalue>
					<xforms:setvalue ref="instance('control-instance')/delete-success" value="true()"/>
				</xforms:action>
			</xforms:submission>

			<!-- send commit -->
			<xforms:submission id="submit-commit" action="{instance('config')/solr_published}update" ref="instance('sendCommit')" instance="sendCommit"
				replace="none" method="post">
				<xforms:action ev:event="xforms-submit-error">
					<xforms:message level="modal">Failed to commit to Solr index.</xforms:message>
					<xforms:setvalue ref="instance('control-instance')/delete-success" value="false()"/>
				</xforms:action>
				<xforms:action ev:event="xforms-submit-done">
					<xforms:setvalue ref="instance('control-instance')/delete-success" value="true()"/>
				</xforms:action>
			</xforms:submission>

			<!-- ************************* LOAD RDF/XML ************************** -->
			<xforms:submission id="load-rdf" serialization="none" method="get"
				action="/nomisma/{instance('control-instance')/conceptScheme}/{instance('control-instance')/id}.rdf" replace="instance" instance="doc">
				<!-- ************ RDF PROCESSING TO CREATE A NEW ID ************** -->
				<xforms:action ev:event="xforms-submit-error">
					<xforms:setvalue ref="instance('control-instance')/load-error" value="true()"/>
				</xforms:action>

				<!-- ************ RDF PROCESSING TO ADD SUPPLEMENTAL INFORMATION ************** -->
				<xforms:action ev:event="xforms-submit-done">
					<!-- set new-id to false to initiate the comparing of content before and after -->
					<xforms:setvalue ref="instance('control-instance')/new-id" value="false()"/>
					<xforms:setvalue ref="instance('control-instance')/content_before_hash"
						value="digest(normalize-space(saxon:serialize(instance('doc'), 'xml')), 'MD5', 'hex')"/>

					<!-- set geo values -->
					<xforms:setvalue ref="instance('control-instance')/geo/lat" value="instance('doc')/geo:SpatialThing/geo:lat"/>
					<xforms:setvalue ref="instance('control-instance')/geo/long" value="instance('doc')/geo:SpatialThing/geo:long"/>
					<xforms:setvalue ref="instance('control-instance')/geo/geoJSON" value="instance('doc')/geo:SpatialThing/osgeo:asGeoJSON"/>

					<xforms:setvalue ref="instance('control-instance')/conceptScheme_uri"
						value="concat('http://nomisma.org/', instance('control-instance')/conceptScheme, '/')"/>

					<!-- set the concept_path based on conceptScheme -->
					<xforms:setvalue ref="instance('control-instance')/concept_path"
						value="concat('file:', instance('config')/absolute_data_path, '/', instance('control-instance')/conceptScheme, '/')"/>

					<!-- set URI -->
					<xforms:setvalue ref="instance('control-instance')/uri"
						value="concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/id)"/>
					
					<xforms:setvalue ref="instance('control-instance')/type" value="instance('doc')/*[1]/name()"/>
				</xforms:action>
			</xforms:submission>

			<!-- **************** MODEL-CONSTRUCT-DONE ********************** -->
			<xforms:action ev:event="xforms-model-construct-done">
				<!-- set username -->
				<xforms:setvalue ref="instance('control-instance')/username" value="xxf:get-remote-user()"/>

				<!-- load RDF file from a conceptScheme dependent on the request parameter used -->
				<xforms:action if="string(xxf:get-request-parameter('id'))">
					<xforms:setvalue ref="instance('control-instance')/id" value="xxf:get-request-parameter('id')"/>
					<xforms:setvalue ref="instance('control-instance')/conceptScheme">id</xforms:setvalue>
					<xforms:send submission="load-rdf"/>
				</xforms:action>

				<xforms:action if="string(xxf:get-request-parameter('symbol'))">
					<xforms:setvalue ref="instance('control-instance')/id" value="xxf:get-request-parameter('symbol')"/>
					<xforms:setvalue ref="instance('control-instance')/conceptScheme">symbol</xforms:setvalue>
					<xforms:send submission="load-rdf"/>
				</xforms:action>

				<!-- load uncertainty ids -->
				<xforms:setvalue ref="instance('sparqlQuery')"
					value="concat(instance('sparql-templates')/prefix, ' ', instance('sparql-templates')/query[@id='uncertainty'])"/>
				<xforms:send submission="submit-sparqlQuery"/>
				<xforms:action xxf:iterate="instance('sparqlResponse')//res:result" ev:event="xforms-submit-done">
					<xforms:var name="uri" select="data(res:binding[@name='uri']/res:uri)"/>
					<xforms:var name="label" select="(res:binding[@name='label']/res:literal)"/>
					<xforms:insert context="instance('uncertainty-list')" nodeset="./child::node()[last()]"
						origin="xforms:element('item', (xforms:attribute('uri', $uri), $label))"/>
				</xforms:action>

				<!-- load role ids -->
				<xforms:setvalue ref="instance('sparqlQuery')"
					value="concat(instance('sparql-templates')/prefix, ' ', instance('sparql-templates')/query[@id='role'])"/>
				<xforms:send submission="submit-sparqlQuery"/>
				<xforms:action xxf:iterate="instance('sparqlResponse')//res:result" ev:event="xforms-submit-done">
					<xforms:var name="uri" select="data(res:binding[@name='uri']/res:uri)"/>
					<xforms:var name="label" select="(res:binding[@name='label']/res:literal)"/>
					<xforms:insert context="instance('role-list')" nodeset="./child::node()[last()]"
						origin="xforms:element('item', (xforms:attribute('uri', $uri), $label))"/>
				</xforms:action>

				<!-- load fields of numismatics -->
				<xforms:setvalue ref="instance('sparqlQuery')"
					value="concat(instance('sparql-templates')/prefix, ' ', instance('sparql-templates')/query[@id='fon'])"/>
				<xforms:send submission="submit-sparqlQuery"/>
				<xforms:action xxf:iterate="instance('sparqlResponse')//res:result" ev:event="xforms-submit-done">
					<xforms:var name="uri" select="data(res:binding[@name='uri']/res:uri)"/>
					<xforms:var name="label" select="(res:binding[@name='label']/res:literal)"/>
					<xforms:insert context="instance('fon-list')" nodeset="./child::node()[last()]"
						origin="xforms:element('item', (xforms:attribute('uri', $uri), $label))"/>
				</xforms:action>

				<!-- insert currently used fields of numismatics into control instance -->
				<xforms:action xxf:iterate="instance('doc')/*[1]/dcterms:isPartOf[contains(@rdf:resource, '_numismatics')]">
					<xforms:var name="uri" select="data(context()/@rdf:resource)"/>
					<xforms:insert context="instance('control-instance')/fons" nodeset="./child::node()[last()]" origin="xforms:element('fon', $uri)"/>
				</xforms:action>
			</xforms:action>

			<!-- **************** XFORMS-READY ********************** -->
			<xforms:action ev:event="xforms-ready">
				<!-- enable save trigger if the document is valid on ready -->
				<xforms:setvalue ref="instance('control-instance')/save-trigger"
					value="if (instance('doc')/*[1]/dcterms:isReplacedBy) then false() else xxf:valid(instance('doc'))"/>

				<!-- set geographic controls -->
				<xforms:setvalue ref="instance('control-instance')/geo/type"
					value="if (instance('doc')/geo:SpatialThing/geo:lat) then 'point' else if (instance('doc')/geo:SpatialThing/osgeo:asGeoJSON) then 'polygon' else ''"/>
				<xforms:setvalue ref="instance('control-instance')/geo/hasFeature"
					value="if (instance('doc')/geo:SpatialThing/geo:lat or instance('doc')/geo:SpatialThing/osgeo:asGeoJSON) then true() else false()"/>


				<!-- toggle case if it's not a new id -->
				<xforms:toggle case="edit-id" if="instance('control-instance')/new-id = false()"/>
				<xforms:toggle case="load-error" if="instance('control-instance')/load-error = true()"/>
			</xforms:action>
		</xforms:model>

		<!-- XBL components -->
		<!--<xi:include href="xbl/bm/bm.xbl" xi:omit-xml-base="true"/>-->
		<xi:include href="xbl/getty/getty.xbl" xi:omit-xml-base="true"/>
		<xi:include href="xbl/pleiades/pleiades.xbl" xi:omit-xml-base="true"/>
		<xi:include href="xbl/viaf/viaf.xbl" xi:omit-xml-base="true"/>
		<xi:include href="xbl/wikidata/wikidata.xbl" xi:omit-xml-base="true"/>
	</head>

	<body>
		<div class="container-fluid">
			<div class="row">
				<div class="col-md-12">
					<p><a href="../"><span class="glyphicon glyphicon-arrow-left"></span>Return to Admin</a></p>
					<xforms:group ref=".[string-length(instance('control-instance')/status) &gt; 0]">
						<div class="alert-success alert-box alert">
							<span class="glyphicon glyphicon-info-sign"></span>
							<strong>Status:</strong>
							<xforms:output ref="instance('control-instance')/status"/>
						</div>
					</xforms:group>

				</div>
			</div>
			<div class="row">
				<div class="col-md-2">
					<xforms:group ref="instance('doc')/*[1][not(dcterms:isReplacedBy)]">
						<xforms:var name="type" select="name()"/>
						<h2>Controls</h2>
						<ul class="control-list">
							<li><h4>Labels/definitions</h4></li>
							<li>
								<xforms:trigger appearance="minimal">
									<xforms:label>
										<span class="glyphicon glyphicon-plus"></span>Preferred Label</xforms:label>
									<xforms:insert ev:event="DOMActivate" origin="instance('prefLabel-template')" context="."
										nodeset="skos:prefLabel[@xml:lang='en']" position="after"/>
								</xforms:trigger>
							</li>
							<li>
								<xforms:trigger appearance="minimal">
									<xforms:label>
										<span class="glyphicon glyphicon-plus"></span>Alternate Label</xforms:label>
									<xforms:insert ev:event="DOMActivate" origin="instance('altLabel-template')" context="." nodeset="./child::node()[last()]"/>
								</xforms:trigger>
							</li>
							<li>
								<xforms:trigger appearance="minimal">
									<xforms:label>
										<span class="glyphicon glyphicon-plus"></span>Definition</xforms:label>
									<xforms:insert ev:event="DOMActivate" origin="instance('definition-template')" context="." node="./child::node()[last()]"/>
								</xforms:trigger>
							</li>
							<xforms:group ref=".[count(skos:scopeNote) = 0]">
								<li>
									<xforms:trigger appearance="minimal">
										<xforms:label>
											<span class="glyphicon glyphicon-plus"></span>Scope Note</xforms:label>
										<xforms:insert ev:event="DOMActivate" origin="instance('scopeNote-template')" context="." node="./child::node()[last()]"
										/>
									</xforms:trigger>
								</li>
							</xforms:group>
							<li><h4>Relations</h4></li>
							<!-- suppress skos:exactMatch from Mint -->
							<xforms:group ref=".[not($type='nmo:Mint')]">
								<li>
									<xforms:trigger appearance="minimal">
										<xforms:label>
											<span class="glyphicon glyphicon-plus"></span>Exact Match</xforms:label>
										<xforms:insert ev:event="DOMActivate" origin="instance('exactMatch-template')" context="."
											nodeset="./child::node()[last()]"/>
									</xforms:trigger>
								</li>
							</xforms:group>
							<xforms:group ref=".[$type='nmo:Mint']">
								<li>
									<xforms:trigger appearance="minimal">
										<xforms:label>
											<span class="glyphicon glyphicon-plus"></span>Close Match</xforms:label>
										<xforms:insert ev:event="DOMActivate" origin="instance('closeMatch-template')" context="."
											nodeset="./child::node()[last()]"/>
									</xforms:trigger>
								</li>
								<li>
									<xforms:trigger appearance="minimal">
										<xforms:label>
											<span class="glyphicon glyphicon-plus"></span>Exact Match</xforms:label>
										<xforms:insert ev:event="DOMActivate" origin="instance('exactMatch-template')" context="."
											nodeset="./child::node()[last()]"/>
									</xforms:trigger>
								</li>
								<xforms:group ref=".[count(skos:related) = 0]">
									<li>
										<xforms:trigger appearance="minimal">
											<xforms:label>
												<span class="glyphicon glyphicon-plus"></span>Uncertain Mint Match</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="instance('control-instance')/atom-type">&#x022;nmo:Mint&#x022;</xforms:setvalue>
												<xforms:setvalue ref="instance('control-instance')/link-property">skos:related</xforms:setvalue>
												<xxf:show dialog="atom-dialog"/>
											</xforms:action>
										</xforms:trigger>
									</li>
								</xforms:group>
							</xforms:group>
							<xforms:group ref=".[not($type='foaf:Person')]">
								<li>
									<xforms:trigger appearance="minimal">
										<xforms:label>
											<span class="glyphicon glyphicon-plus"></span><xforms:output
												value="if ($type='nmo:Mint') then 'Parent Mint/Region' else if ($type = 'nmo:Region') then 'Parent Region' else 'Broader Concept'"
											/>
										</xforms:label>
										<xforms:action ev:event="DOMActivate">
											<xforms:setvalue ref="instance('control-instance')/atom-type"
												value="if ($type='nmo:Mint') then '&#x022;nmo:Region&#x022;' else concat('&#x022;', $type, '&#x022;')"/>
											<xforms:setvalue ref="instance('control-instance')/link-property">skos:broader</xforms:setvalue>
											<xxf:show dialog="atom-dialog"/>
										</xforms:action>
									</xforms:trigger>
								</li>
							</xforms:group>
							<xforms:group ref=".[$type='nmo:Collection']">
								<li>
									<xforms:trigger appearance="minimal">
										<xforms:label>
											<span class="glyphicon glyphicon-plus"></span>Parent Organization</xforms:label>
										<xforms:insert ev:event="DOMActivate" origin="instance('memberOf-template')" context="."
											nodeset="./child::node()[last()]"/>
									</xforms:trigger>
								</li>
							</xforms:group>
							<li>
								<xforms:trigger appearance="minimal">
									<xforms:label>
										<span class="glyphicon glyphicon-plus"></span>Bibliographic Reference</xforms:label>
									<xforms:action ev:event="DOMActivate">
										<xforms:setvalue ref="instance('control-instance')/atom-type">("nmo:TypeSeries" OR
											"nmo:ReferenceWork")</xforms:setvalue>
										<xforms:setvalue ref="instance('control-instance')/link-property">dcterms:source</xforms:setvalue>
										<xxf:show dialog="atom-dialog"/>
									</xforms:action>
								</xforms:trigger>
							</li>
							<li>
								<xforms:trigger appearance="minimal">
									<xforms:label>
										<span class="glyphicon glyphicon-plus"></span>Field of Numismatics</xforms:label>
									<xforms:insert ev:event="DOMActivate" context="instance('control-instance')/fons" nodeset="./child::node()[last()]"
										origin="xforms:element('fon', '')"/>
								</xforms:trigger>
							</li>
							<li>
								<xforms:trigger appearance="minimal">
									<xforms:label>
										<span class="glyphicon glyphicon-plus"></span>See Also</xforms:label>
									<xforms:insert ev:event="DOMActivate" origin="instance('seeAlso-template')" context="." nodeset="./child::node()[last()]"/>
								</xforms:trigger>
							</li>

							<xforms:group ref=".[$type='foaf:Person']">
								<li>
									<h4>Biographical</h4>
								</li>
								<xforms:group ref=".[count(bio:birth) = 0]">
									<li>
										<xforms:trigger appearance="minimal">
											<xforms:label>
												<span class="glyphicon glyphicon-plus"></span>Birth</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:insert
													origin="xforms:element('bio:birth', (xforms:attribute('rdf:resource', concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/id, '#birth'))))"
													context="." nodeset="./child::node()[last()]"/>
												<xforms:insert context="instance('doc')" nodeset="./child::node()[last()]"
													origin="xforms:element('bio:Birth', (xforms:attribute('rdf:about', concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/id, '#birth'))))"/>
												<xforms:insert context="instance('doc')/bio:Birth" origin="xforms:element('dcterms:date')"/>
											</xforms:action>
										</xforms:trigger>
									</li>
								</xforms:group>
								<xforms:group ref=".[count(bio:death) = 0]">
									<li>
										<xforms:trigger appearance="minimal">
											<xforms:label>
												<span class="glyphicon glyphicon-plus"></span>Death</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:insert
													origin="xforms:element('bio:death', (xforms:attribute('rdf:resource', concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/id, '#death'))))"
													context="." nodeset="./child::node()[last()]"/>
												<xforms:insert context="instance('doc')" nodeset="./child::node()[last()]"
													origin="xforms:element('bio:Death', (xforms:attribute('rdf:about', concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/id, '#death'))))"/>
												<xforms:insert context="instance('doc')/bio:Death" origin="xforms:element('dcterms:date')"/>
											</xforms:action>
										</xforms:trigger>
									</li>
								</xforms:group>
							</xforms:group>

							<xforms:group ref=".[$type='rdac:Family' or $type='nmo:Mint' or $type='nmo:Collection']">
								<li>
									<h4>Miscellaneous</h4>
								</li>
								<xforms:group ref=".[$type='rdac:Family' or $type='nmo:Mint']">
									<xforms:group ref=".[count(nmo:hasStartDate) = 0]">
										<li>
											<xforms:trigger appearance="minimal">
												<xforms:label>
													<span class="glyphicon glyphicon-plus"></span>Start Date</xforms:label>
												<xforms:insert ev:event="DOMActivate" origin="instance('hasStartDate-template')" context="."
													nodeset="./child::node()[last()]"/>
											</xforms:trigger>
										</li>
									</xforms:group>
									<xforms:group ref=".[count(nmo:hasEndDate) = 0]">
										<li>
											<xforms:trigger appearance="minimal">
												<xforms:label>
													<span class="glyphicon glyphicon-plus"></span>End Date</xforms:label>
												<xforms:insert ev:event="DOMActivate" origin="instance('hasEndDate-template')" context="."
													nodeset="./child::node()[last()]"/>
											</xforms:trigger>
										</li>
									</xforms:group>
								</xforms:group>
								<xforms:group ref=".[$type='nmo:Collection']">
									<xforms:group ref=".[count(foaf:thumbnail) = 0]">
										<li>
											<xforms:trigger appearance="minimal">
												<xforms:label>
													<span class="glyphicon glyphicon-plus"></span>Thumbnail</xforms:label>
												<xforms:insert ev:event="DOMActivate" origin="instance('thumbnail-template')" context="."
													nodeset="./child::node()[last()]"/>
											</xforms:trigger>
										</li>
									</xforms:group>
								</xforms:group>
							</xforms:group>

							<xforms:group ref=".[$type='nmo:Mint' or $type='nmo:Region'][not(instance('doc')/geo:SpatialThing)]">
								<li>
									<h4>Geography</h4>
								</li>
								<li>
									<xforms:trigger appearance="minimal">
										<xforms:label>
											<span class="glyphicon glyphicon-plus"></span>Coordinates</xforms:label>
										<xforms:action ev:event="DOMActivate">
											<!-- insert geo:location -->
											<xforms:insert context="." nodeset="./child::node()[last()]"
												origin="xforms:element('geo:location', (xforms:attribute('rdf:resource', concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/id, '#this')), ''))"/>
											<!-- insert SpatialThing -->
											<xforms:insert context="instance('doc')" nodeset="./child::node()[last()]"
												origin="xforms:element('geo:SpatialThing', (xforms:attribute('rdf:about', concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/id, '#this')), ''))"/>
											<!-- insert dcterms:isPartOf if there is a skos:broader -->
											<xforms:insert context="instance('doc')/geo:SpatialThing" nodeset="./child::node()[last()]"
												origin="xforms:element('dcterms:isPartOf', (xforms:attribute('rdf:resource', concat(instance('doc')/*[1]/skos:broader/@rdf:resource, '#this')), ''))"
												if="instance('doc')/*[1]/skos:broader"/>
										</xforms:action>
									</xforms:trigger>
								</li>
							</xforms:group>
							<xforms:group ref=".[$type='foaf:Person' or $type='foaf:Organization' or $type='foaf:Group']">
								<li>
									<h4>Roles</h4>
								</li>
								<li>
									<xforms:trigger appearance="minimal">
										<xforms:label>
											<span class="glyphicon glyphicon-plus"></span>Role</xforms:label>
										<xforms:action ev:event="DOMActivate">
											<!-- insert org:hasMembership -->
											<xforms:var name="membershipUri"
												select="concat(instance('control-instance')/uri, '#membership_', digest(string(current-dateTime()), 'MD5', 'hex'))"/>
											<xforms:insert context="." nodeset="./child::node()[last()]"
												origin="xforms:element('org:hasMembership', (xforms:attribute('rdf:resource', $membershipUri), ''))"/>
											<!-- insert org:Membership -->
											<xforms:insert context="instance('doc')" nodeset="./child::node()[last()]"
												origin="xforms:element('org:Membership', (xforms:attribute('rdf:about', $membershipUri), ''))"/>
											<!-- insert org:role into the last org:Membership -->
											<xforms:insert context="instance('doc')/org:Membership[last()]" nodeset="./child::node()[last()]"
												origin="xforms:element('org:role', (xforms:attribute('rdf:resource', ''), ''))"/>
										</xforms:action>
									</xforms:trigger>
								</li>
								<xforms:group ref=".[$type='foaf:Person']">
									<li>
										<xforms:trigger appearance="minimal">
											<xforms:label>
												<span class="glyphicon glyphicon-plus"></span>Dynasty</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="instance('control-instance')/atom-type"
													>&#x022;rdac:Family&#x022;</xforms:setvalue>
												<xxf:show dialog="organization-dialog"/>
											</xforms:action>
											
										</xforms:trigger>
									</li>
								</xforms:group>
							</xforms:group>

							<xforms:group ref=".[$type='nmo:Monogram' or $type = 'crm:E37_Mark']">
								<li><h4>Symbol/Monogram Properties</h4></li>

								<li>
									<xforms:trigger appearance="minimal">
										<xforms:label>
											<span class="glyphicon glyphicon-plus"></span>Constituent Letter</xforms:label>
										<xforms:insert ev:event="DOMActivate" origin="xforms:element('crm:P106_is_composed_of', '')" context="."
											nodeset="./child::node()[last()]"/>
									</xforms:trigger>
								</li>
								<li>
									<xforms:trigger appearance="minimal">
										<xforms:label>
											<span class="glyphicon glyphicon-plus"></span>SVG Graphic</xforms:label>
										<xforms:insert ev:event="DOMActivate" origin="instance('image-template')" context="." nodeset="./child::node()[last()]"
										/>
									</xforms:trigger>
								</li>
								<xforms:group ref=".[count(crm:P190_has_symbolic_content) = 0]">
									<li>
										<xforms:trigger appearance="minimal">
											<xforms:label>
												<span class="glyphicon glyphicon-plus"></span>Unicode Character</xforms:label>
											<xforms:insert ev:event="DOMActivate" origin="xforms:element('crm:P190_has_symbolic_content', '')" context="."
												nodeset="./child::node()[last()]"/>
										</xforms:trigger>
									</li>
								</xforms:group>
							</xforms:group>
						</ul>
					</xforms:group>
				</div>
				<div class="col-md-8">
					<xforms:switch>
						<xforms:case id="create-id">
							<h1>Create ID</h1>
							<div>
								<xforms:input ref="instance('control-instance')/id" incremental="true">
									<xforms:label>id</xforms:label>
									<xforms:alert>Required</xforms:alert>
								</xforms:input>
							</div>
							<div>
								<xforms:select1 ref="instance('control-instance')/type">
									<xforms:label>Type</xforms:label>
									<xforms:alert>Required</xforms:alert>
									<xforms:item>
										<xforms:label>Select...</xforms:label>
										<xforms:value/>
									</xforms:item>
									<xforms:itemset nodeset="instance('classes')/class">
										<xforms:label ref="label"/>
										<xforms:value ref="type"/>
									</xforms:itemset>
								</xforms:select1>
								<xforms:trigger bind="proceed-trigger">
									<xforms:label>Proceed</xforms:label>
									<xforms:action ev:event="DOMActivate">
										<xforms:var name="type" select="instance('control-instance')/type"/>

										<!-- set conceptScheme -->
										<xforms:setvalue ref="instance('control-instance')/conceptScheme"
											value="if ($type = 'nmo:Monogram' or $type = 'crm:E37_Mark') then 'symbol' else 'id'"/>
										<xforms:setvalue ref="instance('control-instance')/conceptScheme_uri"
											value="concat('http://nomisma.org/', instance('control-instance')/conceptScheme, '/')"/>

										<!-- set the concept_path based on conceptScheme -->
										<xforms:setvalue ref="instance('control-instance')/concept_path"
											value="concat('file:', instance('config')/absolute_data_path, '/', instance('control-instance')/conceptScheme, '/')"/>										

										<!-- set URI -->
										<xforms:setvalue ref="instance('control-instance')/uri"
											value="concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/id)"/>
										<!-- create resource description -->
										<xforms:insert context="instance('doc')"
											origin="xforms:element($type, xforms:attribute('rdf:about', instance('control-instance')/uri))"/>
										<!-- insert rdf:type as skos:Concept -->
										<xforms:insert context="instance('doc')/*[1]"
											origin="xforms:element('rdf:type', xforms:attribute('rdf:resource', 'http://www.w3.org/2004/02/skos/core#Concept'))"/>
										<!-- insert skos:prefLabel and skos:definition with @xml:lang='en'-->
										<xforms:insert context="instance('doc')/*[1]"
											origin="xforms:element('skos:prefLabel', xforms:attribute('xml:lang', 'en'))"/>
										<xforms:insert context="instance('doc')/*[1]" nodeset="./child::node()[last()]"
											origin="xforms:element('skos:definition', xforms:attribute('xml:lang', 'en'))"/>
										<!-- insert skos:inScheme -->
										<xforms:insert context="instance('doc')/*[1]" nodeset="./child::node()[last()]"
											origin="xforms:element('skos:inScheme', xforms:attribute('rdf:resource', instance('control-instance')/conceptScheme_uri))"/>
										<!-- insert related foaf:webpage for a collection -->
										<xforms:action if="$type='nmo:Collection'">
											<xforms:insert context="instance('doc')/nmo:Collection" nodeset="./child::node()[last()]"
												origin="xforms:element('foaf:homepage', xforms:attribute('rdf:resource', ''))"/>
										</xforms:action>

										<!-- *** Provenance *** -->
										<xforms:insert context="instance('doc')/*[1]" nodeset="./child::node()[last()]" origin="instance('changeNote-template')"/>
										<xforms:setvalue ref="instance('doc')/*[1]/skos:changeNote/@rdf:resource"
											value="concat(instance('control-instance')/uri, '#provenance')"/>
										<xforms:insert context="instance('doc')" nodeset="./child::node()[last()]" origin="instance('provenance-template')"/>
										<xforms:setvalue ref="instance('doc')/dcterms:ProvenanceStatement/@rdf:about"
											value="concat(instance('control-instance')/uri, '#provenance')"/>
										<xforms:setvalue ref="instance('doc')/dcterms:ProvenanceStatement/foaf:topic/@rdf:resource"
											value="instance('control-instance')/uri"/>

										<!-- Create Activity -->
										<xforms:insert context="instance('doc')/dcterms:ProvenanceStatement" nodeset="./child::node()[last()]"
											origin="xforms:element('prov:wasGeneratedBy')"/>
										<xforms:insert context="instance('doc')/dcterms:ProvenanceStatement/prov:wasGeneratedBy"
											origin="instance('activity-template')"/>
										<xforms:insert context="instance('doc')/dcterms:ProvenanceStatement/prov:wasGeneratedBy/prov:Activity"
											origin="xforms:element('rdf:type', xforms:attribute('rdf:resource', 'http://www.w3.org/ns/prov#Create'))"/>
										<xforms:setvalue ref="instance('doc')/dcterms:ProvenanceStatement/prov:wasGeneratedBy/prov:Activity/dcterms:type"
											>manual</xforms:setvalue>
										<xforms:setvalue
											ref="instance('doc')/dcterms:ProvenanceStatement/prov:wasGeneratedBy/prov:Activity/prov:wasAssociatedWith/@rdf:resource"
											value="concat('http://nomisma.org/editor/', instance('control-instance')/username)"/>
										<xforms:setvalue ref="instance('doc')/dcterms:ProvenanceStatement/prov:wasGeneratedBy/prov:Activity/prov:atTime"
											value="current-dateTime()"/>

										<!-- toggle interface -->
										<xforms:toggle case="edit-id"/>
									</xforms:action>
								</xforms:trigger>
							</div>
						</xforms:case>
						<xforms:case id="load-error">
							<div class="alert-danger alert alert-box">
								<span class="glyphicon glyphicon-exclamation-sign"></span>
								<strong>Alert:</strong> There is no RDF file matching this ID on the local filesystem.</div>
						</xforms:case>
						<xforms:case id="edit-id">

							<!-- display warning message that the ID has been deprecated -->
							<xforms:group ref="instance('doc')/*[1]/dcterms:isReplacedBy">
								<div class="alert alert-box alert-warning">
									<span class="glyphicon glyphicon-info-sign"></span>
									<strong>Status:</strong> This URI has been replaced by <xforms:trigger appearance="minimal">
										<xforms:label ref="@rdf:resource"/>
										<xforms:action ev:event="DOMActivate">
											<xforms:load show="new" resource="{@rdf:resource}"/>
										</xforms:action>
									</xforms:trigger></div>
							</xforms:group>


							<h1>Edit ID <small>
									<xforms:trigger appearance="minimal">
										<xforms:label ref="concat('(http://nomisma.org/id/', instance('control-instance')/id, ')')"/>
										<xforms:action ev:event="DOMActivate">
											<xforms:load show="new"
												resource="{concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/id)}"/>
										</xforms:action>
									</xforms:trigger>
								</small>
							</h1>
							<xforms:group ref="instance('doc')">
								<xforms:group ref="*[1]">
									<xforms:var name="type" select="name()"/>

									<!-- display save/deprecate button when relevant -->
									<div class="submission">
										<xforms:trigger bind="save-trigger">
											<xforms:label><span class="glyphicon glyphicon-floppy-disk"></span>Save</xforms:label>
											<xforms:action ev:event="DOMActivate">


												<!-- if the ID is not new, then evaluate whether a provenance should be added -->
												<xforms:action if="instance('control-instance')/new-id = false()">
													<!-- set hash -->
													<xforms:setvalue ref="instance('control-instance')/content_after_hash"
														value="digest(normalize-space(saxon:serialize(instance('doc'), 'xml')), 'MD5', 'hex')"/>

													<!-- if the hashes are the same, then update the status -->
													<xforms:action
														if="instance('control-instance')/content_before_hash = instance('control-instance')/content_after_hash">
														<xforms:setvalue ref="instance('control-instance')/status">The content is unchanged, so the ID has not
															been saved and updated online.</xforms:setvalue>
													</xforms:action>

													<!-- if the hashed content has changed since the file was loaded -->
													<xforms:action
														if="not(instance('control-instance')/content_before_hash = instance('control-instance')/content_after_hash)">

														<!-- insert a Modify Activity into the provenance, but only if the session-id isn't set -->
														<xforms:action if="not(string(instance('control-instance')/session-id))">
															<xforms:insert context="instance('doc')/dcterms:ProvenanceStatement"
																nodeset="./child::node()[last()]" origin="xforms:element('prov:activity')"/>
															<xforms:insert context="instance('doc')/dcterms:ProvenanceStatement/prov:activity[last()]"
																origin="instance('activity-template')"/>
															<xforms:insert
																context="instance('doc')/dcterms:ProvenanceStatement/prov:activity[last()]/prov:Activity"
																origin="xforms:element('rdf:type', xforms:attribute('rdf:resource', 'http://www.w3.org/ns/prov#Modify'))"/>
															<xforms:setvalue
																ref="instance('doc')/dcterms:ProvenanceStatement/prov:activity[last()]/prov:Activity/dcterms:type"
																>manual</xforms:setvalue>
															<xforms:setvalue
																ref="instance('doc')/dcterms:ProvenanceStatement/prov:activity[last()]/prov:Activity/prov:wasAssociatedWith/@rdf:resource"
																value="concat('http://nomisma.org/editor/', instance('control-instance')/username)"/>
															<xforms:setvalue
																ref="instance('doc')/dcterms:ProvenanceStatement/prov:activity[last()]/prov:Activity/prov:atTime"
																value="current-dateTime()"/>
														</xforms:action>

														<!-- perform CRUD only for modified IDs -->
														<!-- save file to the filesystem -->
														<xforms:setvalue ref="instance('save-config')/url"
															value="concat(instance('control-instance')/concept_path,  instance('control-instance')/id, '.rdf')"/>
														<xforms:insert nodeset="instance('dump')"
															origin="xxf:call-xpl('oxf:/apps/nomisma/xpl/xforms/save-id.xpl', ('doc', 'configuration'), (instance('doc'), instance('save-config')), 'data')"/>

														<!-- delete graph from triplestore, then repost updates -->
														<xforms:setvalue ref="instance('sparqlUpdate')"
															value="replace(instance('sparqlUpdate-template'), 'URI', instance('doc')/*[1]/@rdf:about)"/>
														<xforms:send submission="delete-graph"/>
														<xforms:send submission="post-new"/>

														<!-- post to Solr, if it isn't deprecated. otherwise delete from Solr -->
														<xforms:action if="instance('doc')/*[1]/dcterms:isReplacedBy">
															<xforms:setvalue ref="instance('deleteId')/id" value="instance('control-instance')/id"/>
															<xforms:send submission="delete-id-from-solr"/>
														</xforms:action>
														<xforms:action if="not(instance('doc')/*[1]/dcterms:isReplacedBy)">
															<xforms:insert nodeset="instance('addIndex')"
																origin="xxf:call-xpl('oxf:/apps/nomisma/xpl/views/serializations/rdf/solr.xpl', 'data', instance('doc'), 'data')"/>
															<xforms:send submission="post-solr-doc"/>
														</xforms:action>

														<!-- set new hash -->
														<xforms:setvalue ref="instance('control-instance')/content_before_hash"
															value="digest(normalize-space(saxon:serialize(instance('doc'), 'xml')), 'MD5', 'hex')"/>

														<!-- set session id-->
														<xforms:setvalue ref="instance('control-instance')/session-id" value="xxf:document-id()"/>
													</xforms:action>
												</xforms:action>

												<!-- perform CRUD for new IDs -->
												<xforms:action if="instance('control-instance')/new-id = true()">
													<!-- save file to the filesystem -->
													
													
													<xforms:setvalue ref="instance('save-config')/url"
														value="concat(instance('control-instance')/concept_path,  instance('control-instance')/id, '.rdf')"/>
													<xforms:insert nodeset="instance('dump')"
														origin="xxf:call-xpl('oxf:/apps/nomisma/xpl/xforms/save-id.xpl', ('doc', 'configuration'), (instance('doc'), instance('save-config')), 'data')"/>

													<!-- delete graph from triplestore, then repost updates -->
													<xforms:setvalue ref="instance('sparqlUpdate')"
														value="replace(instance('sparqlUpdate-template'), 'URI', instance('doc')/*[1]/@rdf:about)"/>
													<xforms:send submission="delete-graph"/>
													<xforms:send submission="post-new"/>

													<!-- post to Solr, if it isn't deprecated. otherwise delete from Solr -->
													<xforms:action if="instance('doc')/*[1]/dcterms:isReplacedBy">
														<xforms:setvalue ref="instance('deleteId')/id" value="instance('control-instance')/id"/>
														<xforms:send submission="delete-id-from-solr"/>
													</xforms:action>
													<xforms:action if="not(instance('doc')/*[1]/dcterms:isReplacedBy)">
														<xforms:insert nodeset="instance('addIndex')"
															origin="xxf:call-xpl('oxf:/apps/nomisma/xpl/views/serializations/rdf/solr.xpl', 'data', instance('doc'), 'data')"/>
														<xforms:send submission="post-solr-doc"/>
													</xforms:action>

													<!-- set new-id to false -->
													<xforms:setvalue ref="instance('control-instance')/new-id" value="false()"/>
													<!-- set session id to prevent Modify events from being inserted after the initial save -->
													<xforms:setvalue ref="instance('control-instance')/session-id" value="xxf:document-id()"/>
													<!-- set new hash -->
													<xforms:setvalue ref="instance('control-instance')/content_before_hash"
														value="digest(normalize-space(saxon:serialize(instance('doc'), 'xml')), 'MD5', 'hex')"/>
												</xforms:action>
											</xforms:action>
										</xforms:trigger>

										<xforms:trigger bind="deprecate-trigger">
											<xforms:label><span class="glyphicon glyphicon-remove-sign"></span>Deprecate</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<!-- show deprecate window -->
												<xforms:var name="type" select="instance('doc')/*[1]/name()"/>
												<xforms:setvalue ref="instance('control-instance')/atom-type" value="concat('&#x022;', $type, '&#x022;')"/>
												<xxf:show dialog="deprecate-dialog"/>
											</xforms:action>
										</xforms:trigger>
									</div>

									<!-- alerts and warnings -->
									<xforms:group
										ref=".[count(skos:prefLabel/@xml:lang) &gt; count(skos:prefLabel/@xml:lang[not(preceding::skos:prefLabel/@xml:lang = .)])]">
										<div class="alert-danger alert alert-box">
											<span class="glyphicon glyphicon-exclamation-sign"></span>
											<strong>Alert:</strong> Preferred label languages must be unique. </div>
									</xforms:group>
									<xforms:group
										ref=".[count(skos:definition/@xml:lang) &gt; count(skos:definition/@xml:lang[not(preceding::skos:definition/@xml:lang = .)])]">
										<div class="alert-danger alert alert-box">
											<span class="glyphicon glyphicon-exclamation-sign"></span>
											<strong>Alert:</strong> Definition languages must be unique. </div>
									</xforms:group>
									<xforms:group
										ref=".[dcterms:isPartOf[string-length(@rdf:resource) &gt; 0 and not(ends-with(@rdf:resource, '_numismatics'))]]">
										<div class="alert-danger alert alert-box">
											<span class="glyphicon glyphicon-exclamation-sign"></span>
											<strong>Alert:</strong> dcterms:isPartOf property present that does not link to valid Field of Numismatics. </div>
									</xforms:group>

									<!-- warning recommending an SVG for symbols or monograms -->
									<xforms:group ref=".[($type = 'nmo:Monogram' or $type = 'crm:E37_Mark') and count(crm:P165i_is_incorporated_in) = 0]">
										<div class="alert alert-box alert-warning">
											<span class="glyphicon glyphicon-info-sign"></span>
											<strong>Notice:</strong> At least one SVG Graphic is recommended (but not required) for a symbol or monogram.</div>
									</xforms:group>

									<div class="section">
										<h3>
											<xforms:group ref=".[instance('classes')/class[type=$type]]">
												<xforms:output ref="instance('classes')/class[type=$type]/label"/>
												<small> (<xforms:output value="$type"/>)</small>
											</xforms:group>
											<xforms:group ref=".[not(instance('classes')/class[type=$type])]">
												<xforms:output value="$type"/>
											</xforms:group>
										</h3>
										<div class="subsection">
											<h4>Labels and Definitions</h4>
											<xforms:repeat nodeset="skos:prefLabel[position() &lt;= 10]">
												<div>
													<xforms:input ref=".">
														<xforms:label>Preferred Label</xforms:label>
														<xforms:alert>Required</xforms:alert>
													</xforms:input>
													<xforms:select1 ref="@xml:lang">
														<xforms:item>
															<xforms:label>Select...</xforms:label>
															<xforms:value/>
														</xforms:item>
														<xforms:itemset nodeset="instance('languages')/language">
															<xforms:label ref="."/>
															<xforms:value ref="@value"/>
														</xforms:itemset>
														<xforms:alert>Required; English label most occur once.</xforms:alert>
													</xforms:select1>
													<xforms:group ref=".[count(instance('doc')/*[1]/skos:prefLabel) &gt; 1]">
														<xforms:trigger appearance="minimal">
															<xforms:delete ev:event="DOMActivate" context="."/>
															<xforms:label>
																<span class="glyphicon glyphicon-remove"></span>
															</xforms:label>
														</xforms:trigger>
													</xforms:group>
												</div>
											</xforms:repeat>
											<!-- more than 10 labels, put into div -->
											<xforms:group ref=".[count(skos:prefLabel) &gt; 10]">
												<h5>Additional Preferred Labels <small>
														<xforms:group ref=".[instance('control-instance')/labels-visible = false()]">
															<xforms:trigger appearance="minimal">
																<xforms:label><span class="glyphicon glyphicon-triangle-right"></span></xforms:label>
																<xforms:setvalue ev:event="DOMActivate" ref="instance('control-instance')/labels-visible"
																	value="true()"/>
															</xforms:trigger>
														</xforms:group>
														<xforms:group ref=".[instance('control-instance')/labels-visible = true()]">
															<xforms:trigger appearance="minimal">
																<xforms:label><span class="glyphicon glyphicon-triangle-bottom"></span></xforms:label>
																<xforms:setvalue ev:event="DOMActivate" ref="instance('control-instance')/labels-visible"
																	value="false()"/>
															</xforms:trigger>
														</xforms:group>
													</small></h5>

												<xforms:group ref=".[instance('control-instance')/labels-visible = true()]">
													<div>
														<xforms:repeat nodeset="skos:prefLabel[position() &gt; 10]">
															<div>
																<xforms:input ref=".">
																	<xforms:label>Preferred Label</xforms:label>
																	<xforms:alert>Required</xforms:alert>
																</xforms:input>
																<xforms:select1 ref="@xml:lang">
																	<xforms:item>
																		<xforms:label>Select...</xforms:label>
																		<xforms:value/>
																	</xforms:item>
																	<xforms:itemset nodeset="instance('languages')/language">
																		<xforms:label ref="."/>
																		<xforms:value ref="@value"/>
																	</xforms:itemset>
																	<xforms:alert>Required; English label most occur once.</xforms:alert>
																</xforms:select1>
																<xforms:group ref=".[count(instance('doc')/*[1]/skos:prefLabel) &gt; 1]">
																	<xforms:trigger appearance="minimal">
																		<xforms:delete ev:event="DOMActivate" context="."/>
																		<xforms:label>
																			<span class="glyphicon glyphicon-remove"></span>
																		</xforms:label>
																	</xforms:trigger>
																</xforms:group>
															</div>
														</xforms:repeat>
													</div>
												</xforms:group>

											</xforms:group>
											<xforms:repeat nodeset="skos:altLabel">
												<div>
													<xforms:input ref=".">
														<xforms:label>Alternate Label</xforms:label>
														<xforms:alert>Required</xforms:alert>
													</xforms:input>
													<xforms:select1 ref="@xml:lang">
														<xforms:item>
															<xforms:label>Select...</xforms:label>
															<xforms:value/>
														</xforms:item>
														<xforms:itemset nodeset="instance('languages')/language">
															<xforms:label ref="."/>
															<xforms:value ref="@value"/>
														</xforms:itemset>
														<xforms:alert>Required</xforms:alert>
													</xforms:select1>
													<xforms:trigger appearance="minimal">
														<xforms:delete ev:event="DOMActivate" context="."/>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"></span>
														</xforms:label>
													</xforms:trigger>
												</div>
											</xforms:repeat>
											<xforms:repeat nodeset="skos:definition">
												<div>
													<xforms:textarea ref=".">
														<xforms:label>Definition</xforms:label>
														<xforms:alert>Required</xforms:alert>
													</xforms:textarea>
													<xforms:select1 ref="@xml:lang">
														<xforms:item>
															<xforms:label>Select...</xforms:label>
															<xforms:value/>
														</xforms:item>
														<xforms:itemset nodeset="instance('languages')/language">
															<xforms:label ref="."/>
															<xforms:value ref="@value"/>
														</xforms:itemset>
														<xforms:alert>Required; English label most occur once.</xforms:alert>
													</xforms:select1>
													<xforms:group ref=".[count(.) &gt; 1]">
														<xforms:trigger appearance="minimal">
															<xforms:delete ev:event="DOMActivate" context="."/>
															<xforms:label>
																<span class="glyphicon glyphicon-remove"></span>
															</xforms:label>
														</xforms:trigger>
													</xforms:group>
												</div>
											</xforms:repeat>
											<xforms:group ref="skos:scopeNote">
												<div>
													<xforms:textarea ref=".">
														<xforms:label>Scope Note</xforms:label>
														<xforms:alert>Required</xforms:alert>
													</xforms:textarea>
													<xforms:select1 ref="@xml:lang">
														<xforms:item>
															<xforms:label>Select...</xforms:label>
															<xforms:value/>
														</xforms:item>
														<xforms:itemset nodeset="instance('languages')/language">
															<xforms:label ref="."/>
															<xforms:value ref="@value"/>
														</xforms:itemset>
														<xforms:alert>Required; English label most occur once.</xforms:alert>
													</xforms:select1>
													<xforms:trigger appearance="minimal">
														<xforms:delete ev:event="DOMActivate" context="."/>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"></span>
														</xforms:label>
													</xforms:trigger>
												</div>
											</xforms:group>
										</div>
										<div class="subsection">
											<h4>Semantic Relations</h4>
											<xforms:repeat nodeset="skos:broader">
												<div>
													<xforms:output ref="@rdf:resource">
														<xforms:label>Broader Concept</xforms:label>
													</xforms:output>
													<xforms:trigger appearance="minimal">
														<xforms:action ev:event="DOMActivate">
															<xforms:delete context="."/>
															<xforms:delete context="instance('doc')/geo:SpatialThing/dcterms:isPartOf"
																if="instance('doc')/geo:SpatialThing"/>
														</xforms:action>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"></span>
														</xforms:label>
													</xforms:trigger>
												</div>
											</xforms:repeat>
											<xforms:repeat nodeset="skos:exactMatch">
												<div>
													<xforms:input ref="@rdf:resource">
														<xforms:label>Exact Match</xforms:label>
														<xforms:alert>Required, must be URI</xforms:alert>
													</xforms:input>
													<xforms:trigger appearance="minimal">
														<xforms:delete ev:event="DOMActivate" context="."/>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"></span>
														</xforms:label>
													</xforms:trigger>
												</div>
											</xforms:repeat>
											<xforms:repeat nodeset="skos:closeMatch">
												<div>
													<xforms:input ref="@rdf:resource">
														<xforms:label>Close Match</xforms:label>
														<xforms:alert>Required, must be URI</xforms:alert>
													</xforms:input>
													<xforms:trigger appearance="minimal">
														<xforms:delete ev:event="DOMActivate" context="."/>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"></span>
														</xforms:label>
													</xforms:trigger>
												</div>
											</xforms:repeat>
											<xforms:group ref="skos:related">
												<div>
													<xforms:output ref="rdf:Description/rdf:value/@rdf:resource">
														<xforms:label>Uncertain Match</xforms:label>
													</xforms:output>
													<xforms:trigger appearance="minimal">
														<xforms:delete ev:event="DOMActivate" context="."/>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"></span>
														</xforms:label>
													</xforms:trigger>
												</div>
											</xforms:group>
											<xforms:repeat nodeset="dcterms:source">
												<div>
													<xforms:output ref="@rdf:resource">
														<xforms:label>Reference</xforms:label>
													</xforms:output>
													<xforms:trigger appearance="minimal">
														<xforms:action ev:event="DOMActivate">
															<xforms:delete context="."/>
														</xforms:action>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"></span>
														</xforms:label>
													</xforms:trigger>
												</div>
											</xforms:repeat>
											<xforms:repeat nodeset="rdfs:seeAlso">
												<div>
													<xforms:input ref="@rdf:resource">
														<xforms:label>See Also</xforms:label>
														<xforms:alert>Required, must be URL</xforms:alert>
													</xforms:input>
													<xforms:trigger appearance="minimal">
														<xforms:delete ev:event="DOMActivate" context="."/>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"></span>
														</xforms:label>
													</xforms:trigger>
												</div>
											</xforms:repeat>

											<xforms:group ref=".[instance('control-instance')/type = 'nmo:Collection']">
												<xforms:repeat nodeset="org:memberOf">
													<div>
														<xforms:input ref="@rdf:resource">
															<xforms:label>Parent Org</xforms:label>
															<xforms:alert>Required, must be URL</xforms:alert>
														</xforms:input>
														<xforms:trigger appearance="minimal">
															<xforms:delete ev:event="DOMActivate" context="."/>
															<xforms:label>
																<span class="glyphicon glyphicon-remove"></span>
															</xforms:label>
														</xforms:trigger>
													</div>
												</xforms:repeat>
											</xforms:group>
											
											<xforms:group ref=".[instance('control-instance')/type = 'foaf:Person']">
												<xforms:repeat nodeset="org:memberOf">
													<div>
														<xforms:output ref="@rdf:resource">
															<xforms:label>Dynasty</xforms:label>															
														</xforms:output>
														<xforms:trigger appearance="minimal">
															<xforms:delete ev:event="DOMActivate" context="."/>
															<xforms:label>
																<span class="glyphicon glyphicon-remove"></span>
															</xforms:label>
														</xforms:trigger>
													</div>
												</xforms:repeat>
											</xforms:group>
											
											<!-- insert output for dcterms:isPartOf that isn't a FON -->
											<xforms:repeat
												nodeset="dcterms:isPartOf[string-length(@rdf:resource) &gt; 0 and not(contains(@rdf:resource, '_numismatics'))]">
												<div class="text-danger">
													<xforms:output ref="@rdf:resource">
														<xforms:label>Is Part Of</xforms:label>
														<xforms:alert>dcterms:isPartOf is reserved in this scope for Field of Numismatics</xforms:alert>
													</xforms:output>
													<xforms:trigger appearance="minimal">
														<xforms:delete ev:event="DOMActivate" context="."/>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"></span>
														</xforms:label>
													</xforms:trigger>
												</div>
											</xforms:repeat>

											<!-- treat the field of numismatics separately in the control-instance, then write changes into the RDF doc -->
											<xforms:repeat nodeset="instance('control-instance')/fons/fon">
												<xforms:var name="uri" select="."/>
												<xforms:var name="position" select="position()"/>
												<div>
													<xforms:select1 ref=".">
														<xforms:label>Field</xforms:label>
														<xforms:alert>Required</xforms:alert>
														<xforms:item>
															<xforms:label>Select...</xforms:label>
															<xforms:value/>
														</xforms:item>
														<xforms:itemset nodeset="instance('fon-list')//item">
															<xforms:label ref="."/>
															<xforms:value ref="@uri"/>
														</xforms:itemset>
														<xforms:action ev:event="xforms-value-changed">
															<!-- if there are more entries in fon than dcterms:isPartOf, then insert new isPartOf -->
															<xforms:action
																if="count(instance('control-instance')/fons/fon) &gt; count(instance('doc')/*[1]/dcterms:isPartOf[contains(@rdf:resource, '_numismatics')])">
																<xforms:insert context="instance('doc')/*[1]" nodeset="./child::node()[last()]"
																	origin="instance('isPartOf-template')"/>
																<xforms:setvalue ref="instance('doc')/*[1]/dcterms:isPartOf[last()]/@rdf:resource" value="$uri"
																/>
															</xforms:action>
															<!-- otherwise, change the value of the dcterms:isPartOf -->
															<xforms:action
																if="count(instance('control-instance')/fons/fon) = count(instance('doc')/*[1]/dcterms:isPartOf[contains(@rdf:resource, '_numismatics')])">
																<xforms:setvalue
																	ref="instance('doc')/*[1]/dcterms:isPartOf[contains(@rdf:resource, '_numismatics') and position() = $position]/@rdf:resource"
																	value="$uri"/>
															</xforms:action>
														</xforms:action>
													</xforms:select1>
													<xforms:trigger appearance="minimal">
														<xforms:label>
															<span class="glyphicon glyphicon-remove"></span>
														</xforms:label>
														<xforms:action ev:event="DOMActivate">
															<!-- only delete the matching dcterms:isPartOf if there is a value -->
															<xforms:action if="string-length($uri) &gt; 0">
																<xforms:delete
																	context="instance('doc')/*[1]/dcterms:isPartOf[@rdf:resource=$uri and position()=$position]"
																/>
															</xforms:action>
															<xforms:delete context="."/>
														</xforms:action>
													</xforms:trigger>
												</div>
											</xforms:repeat>
										</div>
										<div class="subsection">
											<h4>Miscellaneous Fields</h4>
											<xforms:group ref="nmo:hasStartDate">
												<xforms:var name="year" select="abs(number(.))"/>
												<div>
													<xforms:input ref=".">
														<xforms:label>Start Date</xforms:label>
														<xforms:alert>Must conform to xsd:gYear</xforms:alert>
													</xforms:input>
													<xforms:output value="if (number(.) &lt; 0) then concat($year, ' B.C.') else concat('A.D. ', $year)"/>
													<xforms:trigger appearance="minimal">
														<xforms:delete ev:event="DOMActivate" context="."/>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"></span>
														</xforms:label>
													</xforms:trigger>
												</div>
											</xforms:group>
											<xforms:group ref="nmo:hasEndDate">
												<xforms:var name="year" select="abs(number(.))"/>
												<div>
													<xforms:input ref=".">
														<xforms:label>End Date</xforms:label>
														<xforms:alert>Must conform to xsd:gYear</xforms:alert>
													</xforms:input>
													<xforms:output value="if (number(.) &lt; 0) then concat($year, ' B.C.') else concat('A.D. ', $year)"/>
													<xforms:trigger appearance="minimal">
														<xforms:delete ev:event="DOMActivate" context="."/>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"></span>
														</xforms:label>
													</xforms:trigger>
												</div>
											</xforms:group>
											<xforms:group ref="foaf:homepage">
												<div>
													<xforms:input ref="@rdf:resource">
														<xforms:label>Home Page</xforms:label>
														<xforms:alert>Required</xforms:alert>
													</xforms:input>
												</div>
											</xforms:group>
											<xforms:group ref="foaf:thumbnail">
												<div>
													<xforms:input ref="@rdf:resource">
														<xforms:label>Thumbnail</xforms:label>
														<xforms:alert>Required</xforms:alert>
													</xforms:input>
													<xforms:trigger appearance="minimal">
														<xforms:delete ev:event="DOMActivate" context="."/>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"></span>
														</xforms:label>
													</xforms:trigger>
												</div>
											</xforms:group>
											<xforms:group ref="geo:location">
												<div>
													<xforms:output ref="@rdf:resource">
														<xforms:label>Location</xforms:label>
													</xforms:output>
												</div>
											</xforms:group>
											<xforms:repeat nodeset="org:hasMembership">
												<div>
													<xforms:output ref="@rdf:resource">
														<xforms:label>Membership</xforms:label>
													</xforms:output>
												</div>
											</xforms:repeat>
										</div>
										<hr />
									</div>

									<xforms:group ref=".[instance('control-instance')/conceptScheme = 'symbol']">
										<div class="subsection">
											<h4>Symbol and Monogram Fields</h4>



											<xforms:group ref=".[count(crm:P106_is_composed_of) &gt; 0]">
												<div class="subsection">
													<h5>Constituent Letters and Symbols</h5>

													<xforms:repeat nodeset="crm:P106_is_composed_of[not(@rdf:resource)]">
														<div>
															<xforms:input ref=".">
																<xforms:label>Letter</xforms:label>
																<xforms:alert>Required</xforms:alert>
															</xforms:input>
															<xforms:trigger appearance="minimal">
																<xforms:delete ev:event="DOMActivate" context="."/>
																<xforms:label>
																	<span class="glyphicon glyphicon-remove"></span>
																</xforms:label>
															</xforms:trigger>
														</div>
													</xforms:repeat>

													<xforms:repeat nodeset="crm:P106_is_composed_of[@rdf:resource]">
														<div>
															<xforms:output ref="@rdf:resource">
																<xforms:label>Monogram/Symbol URI</xforms:label>
															</xforms:output>
														</div>
													</xforms:repeat>
													<hr />
												</div>
											</xforms:group>


											<xforms:group ref=".[count(crm:P165i_is_incorporated_in) &gt; 0]">
												<div class="subsection">
													<h5>Digital Representations</h5>

													<xforms:repeat nodeset="crm:P165i_is_incorporated_in">

														<xforms:group ref="crmdig:D1_Digital_Object">
															<h6>SVG Graphic <xforms:trigger appearance="minimal">
																	<xforms:delete ev:event="DOMActivate" context="parent::node()"/>
																	<xforms:label>
																		<span class="glyphicon glyphicon-remove"></span>
																	</xforms:label>
																</xforms:trigger>
															</h6>

															<div>
																<xforms:input ref="@rdf:about">
																	<xforms:label>URI</xforms:label>
																	<xforms:alert>Must be an HTTP URI pointing a an SVG file.</xforms:alert>
																</xforms:input>
															</div>
															<div>
																<xforms:output ref="dcterms:format">
																	<xforms:label>Format</xforms:label>
																</xforms:output>
															</div>
															<div>
																<xforms:select1 ref="dcterms:license/@rdf:resource">
																	<xforms:label>License</xforms:label>
																	<xforms:alert>Required</xforms:alert>
																	<xforms:item>
																		<xforms:label>Select...</xforms:label>
																		<xforms:value/>
																	</xforms:item>
																	<xforms:itemset nodeset="instance('licenses')/statement">
																		<xforms:label ref="."/>
																		<xforms:value ref="@value"/>
																	</xforms:itemset>
																</xforms:select1>
															</div>
														</xforms:group>
													</xforms:repeat>

													<hr />
												</div>
											</xforms:group>

											<xforms:group ref="crm:P190_has_symbolic_content">
												<div>
													<xforms:input ref=".">
														<xforms:label>Unicode Character</xforms:label>
														<xforms:alert>Must be 1 character</xforms:alert>
													</xforms:input>
													<xforms:trigger appearance="minimal">
														<xforms:delete ev:event="DOMActivate" context="."/>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"></span>
														</xforms:label>
													</xforms:trigger>
												</div>
											</xforms:group>
											<hr />
										</div>
									</xforms:group>
								</xforms:group>

								<!-- geographic -->
								<xforms:group ref="geo:SpatialThing">
									<div class="section">
										<div class="row">
											<div class="col-md-12">
												<h3>Geography <small>
														<xforms:output value="concat('(', @rdf:about, ')')"/>
														<xforms:trigger appearance="minimal">
															<xforms:action ev:event="DOMActivate">
																<xforms:delete nodeset="instance('doc')/*[1]/geo:location"/>
																<xforms:delete nodeset="."/>
																<xforms:setvalue ref="instance('control-instance')/geo/type"/>
																<xforms:setvalue ref="instance('control-instance')/geo/hasFeature" value="false()"/>
															</xforms:action>
															<xforms:label>
																<span class="glyphicon glyphicon-remove"></span>
															</xforms:label>
														</xforms:trigger>
													</small>
												</h3>
												<xforms:group ref=".[not(geo:lat and geo:long) and not(osgeo:asGeoJSON)]">
													<div class="alert-danger alert alert-box">
														<span class="glyphicon glyphicon-exclamation-sign"></span>
														<strong>Alert:</strong> Must contain coordinates. </div>
												</xforms:group>
												<xforms:group ref=".[child::geo:lat and not(number(geo:lat)) and child::geo:long and not(number(geo:long))]">
													<div class="alert-danger alert alert-box">
														<span class="glyphicon glyphicon-exclamation-sign"></span>
														<strong>Alert:</strong> Latitude and Longitude must contain valid coordinates. </div>
												</xforms:group>
												<xforms:group ref=".[child::osgeo:asGeoJSON and not(string(osgeo:asGeoJSON))]">
													<div class="alert-danger alert alert-box">
														<span class="glyphicon glyphicon-exclamation-sign"></span>
														<strong>Alert:</strong> A polygon must be drawn. </div>
												</xforms:group>
												<div class="trigger_container">
													<xforms:group ref=".[count(un:hasUncertainty) = 0]">
														<xforms:trigger appearance="minimal">
															<xforms:label>
																<span class="glyphicon glyphicon-plus"></span>Uncertainty</xforms:label>
															<xforms:insert ev:event="DOMActivate" origin="instance('hasUncertainty-template')" context="."
																nodeset="./child::node()[last()]"/>
														</xforms:trigger>
													</xforms:group>
												</div>
											</div>
										</div>
										<div class="row">
											<div class="col-md-4">
												<xforms:select1 ref="instance('control-instance')/geo/type" appearance="full">
													<xforms:item>
														<xforms:label>point</xforms:label>
														<xforms:value>point</xforms:value>
													</xforms:item>
													<xforms:item>
														<xforms:label>polygon</xforms:label>
														<xforms:value>polygon</xforms:value>
													</xforms:item>
													<xforms:action ev:event="xforms-value-changed">
														<!-- insert elements, if necessary -->
														<xforms:var name="type" select="."/>
														<xforms:action if="$type='point'">
															<xforms:delete nodeset="instance('doc')/geo:SpatialThing/osgeo:asGeoJSON"/>
															<!-- insert geo:lat and geo:long if they do not exist -->
															<xforms:action if="not(instance('doc')/geo:SpatialThing/geo:lat)">
																<xforms:insert context="instance('doc')/geo:SpatialThing" origin="instance('long-template')"/>
																<xforms:insert context="instance('doc')/geo:SpatialThing" origin="instance('lat-template')"/>
															</xforms:action>
														</xforms:action>
														<xforms:action if="$type='polygon'">
															<xforms:delete nodeset="instance('doc')/geo:SpatialThing/geo:lat"/>
															<xforms:delete nodeset="instance('doc')/geo:SpatialThing/geo:long"/>
															<!-- insert geo:lat and geo:long if they do not exist -->
															<xforms:action if="not(instance('doc')/geo:SpatialThing/osgeo:asGeoJSON)">
																<xforms:insert context="instance('doc')/geo:SpatialThing"
																	origin="instance('asGeoJSON-template')"/>
															</xforms:action>
														</xforms:action>
														<!-- initialize openlayers -->
														<xxf:script>init();</xxf:script>
													</xforms:action>
												</xforms:select1>
												<xforms:group ref="geo:lat">
													<div>
														<xforms:input ref=".">
															<xforms:label>Latitude</xforms:label>
															<xforms:alert>Must be -180 to 180</xforms:alert>
														</xforms:input>
													</div>
												</xforms:group>
												<xforms:group ref="geo:long">
													<div>
														<xforms:input ref=".">
															<xforms:label>Longitude</xforms:label>
															<xforms:alert>Must be -180 to 180</xforms:alert>
														</xforms:input>
													</div>
												</xforms:group>
												<xforms:group ref="osgeo:asGeoJSON">
													<div>
														<xforms:output ref=".">
															<xforms:label>Polygon</xforms:label>
														</xforms:output>
													</div>
												</xforms:group>
												<xforms:group ref="dcterms:isPartOf">
													<div>
														<xforms:output ref="@rdf:resource">
															<xforms:label>Parent Region</xforms:label>
														</xforms:output>
													</div>
												</xforms:group>
												<xforms:group ref="un:hasUncertainty">
													<div>
														<xforms:select1 ref="@rdf:resource">
															<xforms:label>Uncertainty</xforms:label>
															<xforms:alert>Required</xforms:alert>
															<xforms:item>
																<xforms:label>Select...</xforms:label>
																<xforms:value/>
															</xforms:item>
															<xforms:itemset nodeset="instance('uncertainty-list')//item">
																<xforms:label ref="."/>
																<xforms:value ref="@uri"/>
															</xforms:itemset>
														</xforms:select1>
														<xforms:trigger appearance="minimal">
															<xforms:delete ev:event="DOMActivate" context="."/>
															<xforms:label>
																<span class="glyphicon glyphicon-remove"></span>
															</xforms:label>
														</xforms:trigger>
													</div>
												</xforms:group>
											</div>
											<div class="col-md-8">
												<xforms:group ref=".[string(instance('control-instance')/geo/type)]">
													<div id="map"></div>
												</xforms:group>
											</div>
										</div>
										<hr />
									</div>
								</xforms:group>
								<!-- birth or death -->
								<xforms:group ref=".[bio:Birth or bio:Death]">
									<div class="section">
										<h3>Biographical Information</h3>

										<xforms:group ref="bio:Birth">
											<xforms:var name="uri" select="@rdf:about"/>
											<div class="subsection">
												<h4>Birth <small>
														<xforms:output value="concat('(', $uri, ')')"/>
														<xforms:trigger appearance="minimal">
															<xforms:action ev:event="DOMActivate">
																<xforms:delete nodeset="instance('doc')/*[1]/bio:birth"/>
																<xforms:delete nodeset="."/>
															</xforms:action>
															<xforms:label>
																<span class="glyphicon glyphicon-remove"></span>
															</xforms:label>
														</xforms:trigger>
													</small>
												</h4>
												<div class="trigger_container">
													<xforms:group ref=".[count(un:hasUncertainty) = 0]">
														<xforms:trigger appearance="minimal">
															<xforms:label>
																<span class="glyphicon glyphicon-plus"></span>Uncertainty</xforms:label>
															<xforms:insert ev:event="DOMActivate" origin="instance('hasUncertainty-template')" context="."
																nodeset="./child::node()[last()]"/>
														</xforms:trigger>
													</xforms:group>
												</div>
												<div>
													<xforms:input ref="dcterms:date">
														<xforms:label>Date</xforms:label>
														<xforms:alert>Must be a valid date</xforms:alert>
														<!-- associated rdf:datatype based on content -->
														<xforms:action ev:event="xforms-value-changed">
															<xforms:var name="val" select="."/>
															<xforms:action if="$val castable as xs:date">
																<xforms:insert if="not(@rdf:datatype)" context="."
																	origin="xforms:attribute('rdf:datatype', 'http://www.w3.org/2001/XMLSchema#date')"/>
																<xforms:setvalue if="@rdf:datatype" ref="@rdf:datatype"
																	>http://www.w3.org/2001/XMLSchema#date</xforms:setvalue>
															</xforms:action>
															<xforms:action if="$val castable as xs:gYearMonth">
																<xforms:insert if="not(@rdf:datatype)" context="."
																	origin="xforms:attribute('rdf:datatype', 'http://www.w3.org/2001/XMLSchema#gYearMonth')"/>
																<xforms:setvalue if="@rdf:datatype" ref="@rdf:datatype"
																	>http://www.w3.org/2001/XMLSchema#gYearMonth</xforms:setvalue>
															</xforms:action>
															<xforms:action if="$val castable as xs:gYear">
																<xforms:insert if="not(@rdf:datatype)" context="."
																	origin="xforms:attribute('rdf:datatype', 'http://www.w3.org/2001/XMLSchema#gYear')"/>
																<xforms:setvalue if="@rdf:datatype" ref="@rdf:datatype"
																	>http://www.w3.org/2001/XMLSchema#gYear</xforms:setvalue>
															</xforms:action>
															<xforms:action
																if="not($val castable as xs:date) and not($val castable as xs:gYearMonth) and not($val castable as xs:gYear)">
																<xforms:delete nodeset="@rdf:datatype"/>
															</xforms:action>
														</xforms:action>
													</xforms:input>
												</div>
												<xforms:group ref="un:hasUncertainty">
													<div>
														<xforms:select1 ref="@rdf:resource">
															<xforms:label>Uncertainty</xforms:label>
															<xforms:alert>Required</xforms:alert>
															<xforms:item>
																<xforms:label>Select...</xforms:label>
																<xforms:value/>
															</xforms:item>
															<xforms:itemset nodeset="instance('uncertainty-list')//item">
																<xforms:label ref="."/>
																<xforms:value ref="@uri"/>
															</xforms:itemset>
														</xforms:select1>
														<xforms:trigger appearance="minimal">
															<xforms:delete ev:event="DOMActivate" context="."/>
															<xforms:label>
																<span class="glyphicon glyphicon-remove"></span>
															</xforms:label>
														</xforms:trigger>
													</div>
												</xforms:group>
											</div>
										</xforms:group>
										<xforms:group ref="bio:Death">
											<xforms:var name="uri" select="@rdf:about"/>
											<div class="subsection">
												<h4>Death <small>
														<xforms:output value="concat('(', $uri, ')')"/>
														<xforms:trigger appearance="minimal">
															<xforms:action ev:event="DOMActivate">
																<xforms:delete nodeset="instance('doc')/*[1]/bio:death"/>
																<xforms:delete nodeset="."/>
															</xforms:action>
															<xforms:label>
																<span class="glyphicon glyphicon-remove"></span>
															</xforms:label>
														</xforms:trigger>
													</small>
												</h4>
												<div class="trigger_container">
													<xforms:group ref=".[count(un:hasUncertainty) = 0]">
														<xforms:trigger appearance="minimal">
															<xforms:label>
																<span class="glyphicon glyphicon-plus"></span>Uncertainty</xforms:label>
															<xforms:insert ev:event="DOMActivate" origin="instance('hasUncertainty-template')" context="."
																nodeset="./child::node()[last()]"/>
														</xforms:trigger>
													</xforms:group>
												</div>
												<div>
													<xforms:input ref="dcterms:date">
														<xforms:label>Date</xforms:label>
														<xforms:alert>Must be a valid date</xforms:alert>
														<!-- associated rdf:datatype based on content -->
														<xforms:action ev:event="xforms-value-changed">
															<xforms:var name="val" select="."/>
															<xforms:action if="$val castable as xs:date">
																<xforms:insert if="not(@rdf:datatype)" context="."
																	origin="xforms:attribute('rdf:datatype', 'http://www.w3.org/2001/XMLSchema#date')"/>
																<xforms:setvalue if="@rdf:datatype" ref="@rdf:datatype"
																	>http://www.w3.org/2001/XMLSchema#date</xforms:setvalue>
															</xforms:action>
															<xforms:action if="$val castable as xs:gYearMonth">
																<xforms:insert if="not(@rdf:datatype)" context="."
																	origin="xforms:attribute('rdf:datatype', 'http://www.w3.org/2001/XMLSchema#gYearMonth')"/>
																<xforms:setvalue if="@rdf:datatype" ref="@rdf:datatype"
																	>http://www.w3.org/2001/XMLSchema#gYearMonth</xforms:setvalue>
															</xforms:action>
															<xforms:action if="$val castable as xs:gYear">
																<xforms:insert if="not(@rdf:datatype)" context="."
																	origin="xforms:attribute('rdf:datatype', 'http://www.w3.org/2001/XMLSchema#gYear')"/>
																<xforms:setvalue if="@rdf:datatype" ref="@rdf:datatype"
																	>http://www.w3.org/2001/XMLSchema#gYear</xforms:setvalue>
															</xforms:action>
															<xforms:action
																if="not($val castable as xs:date) and not($val castable as xs:gYearMonth) and not($val castable as xs:gYear)">
																<xforms:delete nodeset="@rdf:datatype"/>
															</xforms:action>
														</xforms:action>
													</xforms:input>
												</div>
												<xforms:group ref="un:hasUncertainty">
													<div>
														<xforms:select1 ref="@rdf:resource">
															<xforms:label>Uncertainty</xforms:label>
															<xforms:alert>Required</xforms:alert>
															<xforms:item>
																<xforms:label>Select...</xforms:label>
																<xforms:value/>
															</xforms:item>
															<xforms:itemset nodeset="instance('uncertainty-list')//item">
																<xforms:label ref="."/>
																<xforms:value ref="@uri"/>
															</xforms:itemset>
														</xforms:select1>
														<xforms:trigger appearance="minimal">
															<xforms:delete ev:event="DOMActivate" context="."/>
															<xforms:label>
																<span class="glyphicon glyphicon-remove"></span>
															</xforms:label>
														</xforms:trigger>
													</div>
												</xforms:group>
											</div>
										</xforms:group>
										<hr />
									</div>
								</xforms:group>
								<!-- org:Membership -->
								<xforms:repeat nodeset="org:Membership">
									<xforms:var name="uri" select="@rdf:about"/>
									<xforms:var name="position" select="position()"/>
									<div class="section">
										<h3>Membership <small>
												<xforms:output value="concat('(', $uri, ')')"/>
												<xforms:trigger appearance="minimal">
													<xforms:action ev:event="DOMActivate">
														<xforms:delete nodeset="instance('doc')/*[1]/org:hasMembership[@rdf:resource=$uri]"/>
														<xforms:delete nodeset="."/>
													</xforms:action>
													<xforms:label>
														<span class="glyphicon glyphicon-remove"></span>
													</xforms:label>
												</xforms:trigger>
											</small>
										</h3>
										<xforms:group ref=".[count(ancestor::rdf:RDF/org:Membership[@rdf:about=$uri]) != 1]">
											<div class="alert-danger alert alert-box">
												<span class="glyphicon glyphicon-exclamation-sign"></span>
												<strong>Alert:</strong> There cannot be multiple memberships with identical URIs.</div>
										</xforms:group>
										<div class="trigger_container">
											<xforms:group ref=".[count(nmo:hasStartDate) = 0]">
												<xforms:trigger appearance="minimal">
													<xforms:label>
														<span class="glyphicon glyphicon-plus"></span>Start Date</xforms:label>
													<xforms:insert ev:event="DOMActivate" origin="instance('hasStartDate-template')" context="."
														nodeset="./child::node()[last()]"/>
												</xforms:trigger>
											</xforms:group>
											<xforms:group ref=".[count(nmo:hasEndDate) = 0]">
												<xforms:trigger appearance="minimal">
													<xforms:label>
														<span class="glyphicon glyphicon-plus"></span>End Date</xforms:label>
													<xforms:insert ev:event="DOMActivate" origin="instance('hasEndDate-template')" context="."
														nodeset="./child::node()[last()]"/>
												</xforms:trigger>
											</xforms:group>
											<xforms:group ref=".[count(org:organization) = 0]">
												<xforms:trigger appearance="minimal">
													<xforms:label>
														<span class="glyphicon glyphicon-plus"></span>Organization</xforms:label>
													<xforms:action ev:event="DOMActivate">
														<xforms:setvalue ref="instance('control-instance')/membership-position" value="$position"/>
														<xforms:setvalue ref="instance('control-instance')/atom-type"
															>&#x022;foaf:Organization&#x022;</xforms:setvalue>
														<xxf:show dialog="organization-dialog"/>
													</xforms:action>
												</xforms:trigger>
											</xforms:group>
										</div>
										<!-- role -->
										<xforms:group ref="org:role">
											<div>
												<xforms:select1 ref="@rdf:resource">
													<xforms:label>Role</xforms:label>
													<xforms:alert>Required</xforms:alert>
													<xforms:item>
														<xforms:label>Select...</xforms:label>
														<xforms:value/>
													</xforms:item>
													<xforms:itemset nodeset="instance('role-list')//item">
														<xforms:label ref="."/>
														<xforms:value ref="@uri"/>
													</xforms:itemset>
													<!-- no longer change the URI for the membership based on the role. Difficult to maintain -->
													<!--<xforms:action ev:event="xforms-value-changed">
														<xforms:var name="role" select="."/>
														<xforms:var name="count" select="count(instance('doc')//org:role[@rdf:resource = $role])"/>
														<xforms:setvalue ref="ancestor::org:Membership/@rdf:about"
															value="concat(ancestor::rdf:RDF/*[1]/@rdf:about, '#', substring-after($role, 'id/'), if ($count &gt; 1) then $count else '')"/>
														<xforms:setvalue ref="ancestor::rdf:RDF/*[1]/org:hasMembership[position()=$position]/@rdf:resource"
															value="concat(ancestor::rdf:RDF/*[1]/@rdf:about, '#', substring-after($role, 'id/'), if ($count &gt; 1) then $count else '')"
														/>
													</xforms:action>-->
												</xforms:select1>
											</div>
										</xforms:group>
										<!-- start and end date -->
										<xforms:group ref="nmo:hasStartDate">
											<xforms:var name="year" select="abs(number(.))"/>
											<div>
												<xforms:input ref=".">
													<xforms:label>Start Date</xforms:label>
													<xforms:alert>Must conform to xsd:gYear</xforms:alert>
												</xforms:input>
												<xforms:output value="if (number(.) &lt; 0) then concat($year, ' B.C.') else concat('A.D. ', $year)"/>
												<xforms:trigger appearance="minimal">
													<xforms:delete ev:event="DOMActivate" context="."/>
													<xforms:label>
														<span class="glyphicon glyphicon-remove"></span>
													</xforms:label>
												</xforms:trigger>
											</div>
										</xforms:group>
										<xforms:group ref="nmo:hasEndDate">
											<xforms:var name="year" select="abs(number(.))"/>
											<div>
												<xforms:input ref=".">
													<xforms:label>End Date</xforms:label>
													<xforms:alert>Must conform to xsd:gYear</xforms:alert>
												</xforms:input>
												<xforms:output value="if (number(.) &lt; 0) then concat($year, ' B.C.') else concat('A.D. ', $year)"/>
												<xforms:trigger appearance="minimal">
													<xforms:delete ev:event="DOMActivate" context="."/>
													<xforms:label>
														<span class="glyphicon glyphicon-remove"></span>
													</xforms:label>
												</xforms:trigger>
											</div>
										</xforms:group>
										<xforms:group ref="org:organization">
											<div>
												<xforms:output ref="@rdf:resource">
													<xforms:label>Dynasty/Org</xforms:label>
												</xforms:output>
												<xforms:trigger appearance="minimal">
													<xforms:delete ev:event="DOMActivate" context="."/>
													<xforms:label>
														<span class="glyphicon glyphicon-remove"></span>
													</xforms:label>
												</xforms:trigger>
											</div>
										</xforms:group>
										<hr />
									</div>
								</xforms:repeat>
								<!-- display provenance -->
								<xforms:group ref="dcterms:ProvenanceStatement">
									<xforms:var name="count" select="count(descendant::prov:Activity)"/>

									<div class="section">
										<h3>Provenance</h3>
										<table class="table">
											<thead>
												<th>Date</th>
												<th>Editor</th>
												<th>Edit Type</th>
												<th>Description</th>
											</thead>
											<tbody>
												<xforms:repeat nodeset="descendant::prov:Activity">
													<xforms:var name="position" select="position()"/>

													<tr>
														<td>
															<xforms:output ref="format-dateTime(prov:atTime, '[Y0001]-[M01]-[D01]')"/>
														</td>
														<td>
															<xforms:repeat nodeset="prov:wasAssociatedWith">
																<xforms:output value="tokenize(@rdf:resource, '/')[last()]"/>
																<br />
															</xforms:repeat>
														</td>
														<td>
															<xforms:output ref="dcterms:type"/>
															<xforms:group ref=".[dcterms:type = 'spreadsheet']">
																<xforms:trigger appearance="minimal">
																	<xforms:label>
																		<span class="glyphicon glyphicon-new-window"></span>
																	</xforms:label>
																	<xforms:load ev:event="DOMActivate" show="new" ref="prov:used/@rdf:resource"/>
																</xforms:trigger>
															</xforms:group>
														</td>
														<td>
															<xforms:group ref=".[$position = $count]">
																<xforms:group ref="dcterms:description">
																	<xforms:textarea ref=".">
																		<xforms:alert>Required</xforms:alert>
																	</xforms:textarea>
																	<xforms:select1 ref="@xml:lang">
																		<xforms:item>
																			<xforms:label>Select...</xforms:label>
																			<xforms:value/>
																		</xforms:item>
																		<xforms:itemset nodeset="instance('languages')/language">
																			<xforms:label ref="."/>
																			<xforms:value ref="@value"/>
																		</xforms:itemset>
																		<xforms:alert>Required</xforms:alert>
																	</xforms:select1>
																	<xforms:trigger appearance="minimal">
																		<xforms:dispatch target="delete-description-dialog" name="fr-show"
																			ev:event="DOMActivate"/>
																		<xforms:label>
																			<span class="glyphicon glyphicon-remove"></span>
																		</xforms:label>
																	</xforms:trigger>
																</xforms:group>
															</xforms:group>
															<xforms:group ref=".[$position &lt; $count]">
																<xforms:output ref="dcterms:description"/>
															</xforms:group>
														</td>
													</tr>
												</xforms:repeat>
											</tbody>

										</table>
									</div>
								</xforms:group>
							</xforms:group>
						</xforms:case>
					</xforms:switch>
				</div>
				<div class="col-md-2">
					<xforms:group ref="instance('doc')/*[1][not(dcterms:isReplacedBy)]">
						<xforms:var name="type" select="name()"/>
						<h3>Import</h3>
						<!-- import skos:prefLabels from wikidata for those languages that are not already in the RDF -->
						<xforms:group ref=".[not(skos:*[contains(@rdf:resource, 'wikidata')])]">
							<nomisma:wikidata/>
						</xforms:group>
						<!-- link roles to person facet in the Getty AAT -->
						<xforms:group ref=".[$type='org:Role']">
							<nomisma:getty/>
						</xforms:group>
						<!-- import AAT/TGN/ULAN URIs from Getty -->
						<xforms:group ref=".[$type='nmo:Denomination' or $type='nmo:Material' or $type='nmo:ObjectType']">
							<!--<nomisma:bm/>-->
							<nomisma:getty/>
						</xforms:group>
						<!-- extract coordinates from Pleiades if there is a Pleiades URI in skos:exactMatch, but no geo:lat and geo:long -->
						<xforms:group ref=".[$type='nmo:Mint' or $type='nmo:Region']">
							<!--<nomisma:bm/>-->
							<nomisma:getty/>
							<xforms:group ref=".[not(skos:closeMatch[contains(@rdf:resource, 'pleiades.stoa.org')])]">
								<nomisma:pleiades/>
							</xforms:group>
						</xforms:group>
						<!-- query VIAF to add associated URIs -->
						<xforms:group ref=".[$type='foaf:Person' or $type='foaf:Organization' or $type = 'foaf:Group']">
							<!--<nomisma:bm/>-->
							<nomisma:getty/>
							<nomisma:viaf/>
						</xforms:group>
					</xforms:group>
				</div>

				<!-- ***** DIALOGS ***** -->
				<fr:alert-dialog id="delete-description-dialog">
					<fr:label>Delete Description</fr:label>
					<fr:message>It isn't recommended to delete a description of provenance activity unless the edit is to fix a minor typo.
						Continue?</fr:message>
					<fr:positive-choice>
						<fr:label>Yes</fr:label>
						<xforms:action ev:event="DOMActivate">
							<xforms:delete nodeset="instance('doc')/descendant::prov:Activity[last()]/dcterms:description"/>
						</xforms:action>
					</fr:positive-choice>
					<fr:negative-choice>
						<fr:label>No</fr:label>
					</fr:negative-choice>
				</fr:alert-dialog>

				<xxf:dialog id="atom-dialog" appearance="full" level="modal" close="true" draggable="true" visible="false">
					<xforms:label
						value="if (instance('control-instance')/link-property = 'crm:P106_is_composed_of') then 'Constituent Symbol' 
						else if (instance('control-instance')/link-property = 'skos:broader') then 'Broader Concept' 
						else if (instance('control-instance')/link-property = 'skos:related') then 'Uncertain Match' 
						else 'Bibliographic Reference'"/>

					<!-- display radio button for broader dialog for mints -->
					<xforms:group ref=".[instance('control-instance')/type = 'nmo:Mint' and instance('control-instance')/link-property = 'skos:broader']">
						<div style="width:400px">
							<p class="text-info"><span class="glyphicon glyphicon-info-sign"></span> In most cases, a mint should point to a parent region. In
								certain cases of individual, definable workshops, the broader concept can be the primary mint for a place, within the same
								general field of numismatics.</p>
							<div>
								<xforms:select1 ref="instance('control-instance')/atom-type" appearance="full">
									<xforms:item>
										<xforms:label>Region</xforms:label>
										<xforms:value>&#x022;nmo:Region&#x022;</xforms:value>
									</xforms:item>
									<xforms:item>
										<xforms:label>Mint</xforms:label>
										<xforms:value>&#x022;nmo:Mint&#x022;</xforms:value>
									</xforms:item>
								</xforms:select1>
							</div>
						</div>
					</xforms:group>

					<div>
						<xforms:input ref="instance('control-instance')/atom-search"/>
						<xforms:trigger>
							<xforms:label>Search</xforms:label>
							<!-- delete current options in the instance and initiate new query -->
							<xforms:action ev:event="DOMActivate">
								<xforms:send submission="query-feed"/>
							</xforms:action>
						</xforms:trigger>
					</div>
					<div style="width:400px;">
						<xforms:group ref=".[count(instance('feed')//atom:entry) &gt; 0]">
							<h4>Results</h4>
							<div>
								<xforms:select1 ref="instance('control-instance')/atom-id" appearance="compact">
									<xforms:itemset nodeset="instance('feed')//atom:entry">
										<xforms:label ref="atom:title"/>
										<xforms:value ref="atom:id"/>
									</xforms:itemset>
									<xforms:action ev:event="xforms-value-changed">
										<xforms:setvalue ref="instance('control-instance')/atom-summary"
											value="instance('feed')//atom:entry[atom:id = instance('control-instance')/atom-id]/atom:summary"/>
									</xforms:action>
								</xforms:select1>
								<xforms:trigger>
									<xforms:label>Select</xforms:label>
									<xforms:action ev:event="DOMActivate">
										<!-- insert the uncertain-match-template if the link-property is skos:related -->
										<xforms:action if="instance('control-instance')/link-property = 'skos:related'">
											<xforms:insert context="instance('doc')/*[1]" nodeset="./child::node()[last()]"
												origin="instance('uncertain-match-template')"/>
											<xforms:setvalue ref="instance('doc')/*[1]/skos:related/rdf:Description/rdf:value/@rdf:resource"
												value="concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/atom-id)"/>
										</xforms:action>
										<xforms:action if="not(instance('control-instance')/link-property = 'skos:related')">
											<xforms:insert context="instance('doc')/*[1]" nodeset="./child::node()[last()]"
												origin="xforms:element(instance('control-instance')/link-property, (xforms:attribute('rdf:resource', concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/atom-id)), ''))"/>
											<!-- only insert dcterms:isPartOf into geo:SpatialThing for borader queries -->
											<xforms:action if="instance('control-instance')/link-property = 'skos:broader'">
												<!-- insert dcterms:isPartOf into the SpatialThing, if it exists -->
												<xforms:insert context="instance('doc')/geo:SpatialThing" nodeset="./child::node()[last()]"
													origin="xforms:element('dcterms:isPartOf', (xforms:attribute('rdf:resource', concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/atom-id, '#this')), ''))"
													if="instance('doc')/geo:SpatialThing"/>
											</xforms:action>
										</xforms:action>

										<!-- blank atom search nodes and atom feed -->
										<xforms:delete nodeset="instance('feed')/*"/>
										<xforms:setvalue ref="instance('control-instance')/atom-search"/>
										<xforms:setvalue ref="instance('control-instance')/atom-id"/>
										<xforms:setvalue ref="instance('control-instance')/atom-summary"/>
										<xforms:setvalue ref="instance('control-instance')/link-property"/>
										<xxf:hide dialog="atom-dialog"/>
									</xforms:action>
								</xforms:trigger>
							</div>
							<xforms:group ref=".[string-length(instance('control-instance')/atom-summary) &gt; 0]">
								<div>
									<xforms:output ref="instance('control-instance')/atom-summary">
										<xforms:label>Definition</xforms:label>
									</xforms:output>
									<xforms:trigger appearance="minimal">
										<xforms:label>
											<span class="glyphicon glyphicon-new-window"></span>
										</xforms:label>
										<xforms:load ev:event="DOMActivate" show="new"
											ref="concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/atom-id)"/>
									</xforms:trigger>
								</div>
							</xforms:group>

						</xforms:group>
						<xforms:group ref=".[count(instance('feed')//atom:entry) = 0 and string(instance('feed')/atom:title)]">
							<h4>No results found.</h4>
						</xforms:group>
					</div>
				</xxf:dialog>

				<xxf:dialog id="organization-dialog" appearance="full" level="modal" close="true" draggable="true" visible="false">
					<xforms:label>Parent Dynasty/Organization</xforms:label>

					<!-- only display this choice in the lookup menu for the org:Membership model -->
					<xforms:group ref=".[not(instance('control-instance')/atom-type = '&#x022;rdac:Family&#x022;')]">
						<div>
							<xforms:select1 ref="instance('control-instance')/atom-type" appearance="full">
								<xforms:item>
									<xforms:label>Organization</xforms:label>
									<xforms:value>&#x022;foaf:Organization&#x022;</xforms:value>
								</xforms:item>
								<!--<xforms:item>
								<xforms:label>Family</xforms:label>
								<xforms:value>&#x022;rdac:Family&#x022;</xforms:value>
							</xforms:item>-->
								<xforms:item>
									<xforms:label>Mint</xforms:label>
									<xforms:value>&#x022;nmo:Mint&#x022;</xforms:value>
								</xforms:item>
							</xforms:select1>
						</div>
					</xforms:group>

					<div>
						<xforms:input ref="instance('control-instance')/atom-search"/>
						<xforms:trigger>
							<xforms:label>Search</xforms:label>
							<!-- delete current options in the instance and initiate new query -->
							<xforms:action ev:event="DOMActivate">
								<xforms:send submission="query-feed"/>
							</xforms:action>
						</xforms:trigger>
					</div>
					<div style="width:400px;">
						<xforms:group ref=".[count(instance('feed')//atom:entry) &gt; 0]">
							<h4>Results</h4>
							<div>
								<xforms:select1 ref="instance('control-instance')/atom-id" appearance="compact">
									<xforms:itemset nodeset="instance('feed')//atom:entry">
										<xforms:label ref="atom:title"/>
										<xforms:value ref="atom:id"/>
									</xforms:itemset>
									<xforms:action ev:event="xforms-value-changed">
										<xforms:setvalue ref="instance('control-instance')/atom-summary"
											value="instance('feed')//atom:entry[atom:id = instance('control-instance')/atom-id]/atom:summary"/>
									</xforms:action>
								</xforms:select1>
								<xforms:trigger>
									<xforms:label>Select</xforms:label>
									<xforms:action ev:event="DOMActivate">

										<!-- insert org:organization into the org:Membership for people, otherwise, insert org:memberOf -->
										<xforms:insert
											context="instance('doc')/org:Membership[position() = number(instance('control-instance')/membership-position)]"
											nodeset="./child::node()[last()]"
											origin="xforms:element('org:organization', (xforms:attribute('rdf:resource', concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/atom-id)), ''))"
											if="not(instance('control-instance')/atom-type = '&#x022;rdac:Family&#x022;')"/>

										<xforms:insert context="instance('doc')/*[1]" nodeset="./child::node()[last()]"
											origin="xforms:element('org:memberOf', (xforms:attribute('rdf:resource', concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/atom-id)), ''))"
											if="instance('control-instance')/atom-type = '&#x022;rdac:Family&#x022;'"/>

										<!-- blank atom search nodes and atom feed -->
										<xforms:delete nodeset="instance('feed')/*"/>
										<xforms:setvalue ref="instance('control-instance')/atom-search"/>
										<xforms:setvalue ref="instance('control-instance')/atom-id"/>
										<xforms:setvalue ref="instance('control-instance')/atom-summary"/>
										<xxf:hide dialog="organization-dialog"/>
									</xforms:action>
								</xforms:trigger>
							</div>
							<xforms:group ref=".[string-length(instance('control-instance')/atom-summary) &gt; 0]">
								<div>
									<xforms:output ref="instance('control-instance')/atom-summary">
										<xforms:label>Definition</xforms:label>
									</xforms:output>
									<xforms:trigger appearance="minimal">
										<xforms:label>
											<span class="glyphicon glyphicon-new-window"></span>
										</xforms:label>
										<xforms:load ev:event="DOMActivate" show="new"
											ref="concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/atom-id)"/>
									</xforms:trigger>
								</div>
							</xforms:group>
						</xforms:group>
						<xforms:group ref=".[count(instance('feed')//atom:entry) = 0 and string(instance('feed')/atom:title)]">
							<h4>No results found.</h4>
						</xforms:group>
					</div>
				</xxf:dialog>

				<xxf:dialog id="deprecate-dialog" appearance="full" level="modal" close="true" draggable="true" visible="false">
					<xforms:label>Deprecate ID</xforms:label>
					<div>
						<p>Search for an existing ID to forward. By default, this ID is usually the same RDF class.</p>
						
						<div>
							<xforms:select1 ref="instance('control-instance')/atom-type">
								<xforms:label>Type</xforms:label>
								<xforms:itemset nodeset="instance('classes')/class">
									<xforms:label ref="label"/>
									<xforms:value ref="concat('&#x022;', type, '&#x022;')"/>
								</xforms:itemset>
							</xforms:select1>
						</div>
						
						<div>
							<xforms:input ref="instance('control-instance')/atom-search">
								<xforms:label>Keyword</xforms:label>
							</xforms:input>
							
							<xforms:trigger>
								<xforms:label>Search</xforms:label>
								<!-- delete current options in the instance and initiate new query -->
								<xforms:action ev:event="DOMActivate">
									<xforms:send submission="query-feed"/>
								</xforms:action>
							</xforms:trigger>
						</div>
						
					</div>
					<div style="width:400px;">
						<xforms:group ref=".[count(instance('feed')//atom:entry) &gt; 0]">
							<h4>Results</h4>
							<div>
								<xforms:select1 ref="instance('control-instance')/atom-id" appearance="compact">
									<xforms:itemset nodeset="instance('feed')//atom:entry[not(atom:id = instance('control-instance')/id)]">
										<xforms:label ref="atom:title"/>
										<xforms:value ref="atom:id"/>
									</xforms:itemset>
									<xforms:action ev:event="xforms-value-changed">
										<xforms:setvalue ref="instance('control-instance')/atom-summary"
											value="instance('feed')//atom:entry[atom:id = instance('control-instance')/atom-id]/atom:summary"/>
									</xforms:action>
								</xforms:select1>
								<xforms:trigger>
									<xforms:label>Select</xforms:label>
									<xforms:action ev:event="DOMActivate">
										<!-- delete all triples which are not skos:prefLabel and skos:definition -->
										<xforms:delete nodeset="instance('doc')/*[not(position() = 1)]"/>
										<xforms:delete nodeset="instance('doc')/*[1]/*[not(name()='skos:prefLabel') and not(name()='skos:definition')]"/>

										<!-- insert dcterms:isReplacedBy -->
										<xforms:insert context="instance('doc')/*[1]" nodeset="./child::node()[last()]"
											origin="xforms:element('dcterms:isReplacedBy', (xforms:attribute('rdf:resource', concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/atom-id)), ''))"/>

										<!-- blank atom search nodes and atom feed -->
										<xforms:delete nodeset="instance('feed')/*"/>
										<xforms:setvalue ref="instance('control-instance')/atom-search"/>
										<xforms:setvalue ref="instance('control-instance')/atom-id"/>
										<xforms:setvalue ref="instance('control-instance')/atom-summary"/>

										<!-- save file back to disk -->
										<xforms:setvalue ref="instance('save-config')/url"
											value="concat(instance('control-instance')/concept_path,  instance('control-instance')/id, '.rdf')"/>
										<xforms:insert nodeset="instance('dump')"
											origin="xxf:call-xpl('oxf:/apps/nomisma/xpl/xforms/save-id.xpl', ('doc', 'configuration'), (instance('doc'), instance('save-config')), 'data')"/>

										<!-- delete graph from triplestore, then repost updates -->
										<xforms:setvalue ref="instance('sparqlUpdate')"
											value="replace(instance('sparqlUpdate-template'), 'URI', instance('doc')/*[1]/@rdf:about)"/>
										<xforms:send submission="post-new"/>

										<!-- delete from Solr -->
										<xforms:setvalue ref="instance('deleteId')/id" value="instance('control-instance')/id"/>
										<xforms:send submission="delete-id-from-solr"/>
										<xxf:hide dialog="deprecate-dialog"/>
									</xforms:action>
								</xforms:trigger>
							</div>
							<xforms:group ref=".[string-length(instance('control-instance')/atom-summary) &gt; 0]">
								<div>
									<xforms:output ref="instance('control-instance')/atom-summary">
										<xforms:label>Definition</xforms:label>
									</xforms:output>
									<xforms:trigger appearance="minimal">
										<xforms:label>
											<span class="glyphicon glyphicon-new-window"></span>
										</xforms:label>
										<xforms:action ev:event="DOMActivate">
											<xforms:load show="new"
												resource="{concat(instance('control-instance')/conceptScheme_uri, instance('control-instance')/atom-id)}"/>
										</xforms:action>
									</xforms:trigger>
								</div>
							</xforms:group>
						</xforms:group>
						<xforms:group ref=".[count(instance('feed')//atom:entry) = 0 and string(instance('feed')/atom:title)]">
							<h4>No results found.</h4>
						</xforms:group>
					</div>
				</xxf:dialog>
				<!-- hidden values -->
				<div style="display:none">
					<xforms:input ref="instance('control-instance')/geo/hasFeature" id="geo-hasFeature"/>
					<xforms:output ref="instance('control-instance')/geo/type" id="geo-type-control"/>
					<xforms:output ref="instance('control-instance')/geo/lat" id="geo-lat"/>
					<xforms:output ref="instance('control-instance')/geo/long" id="geo-long"/>
					<xforms:output ref="instance('control-instance')/geo/geoJSON" id="geo-geoJSON"/>
					<xforms:input ref="instance('doc')/geo:SpatialThing/osgeo:asGeoJSON" id="geoJSON-input"/>
					<xforms:input ref="instance('doc')/geo:SpatialThing/geo:lat" id="lat-input"/>
					<xforms:input ref="instance('doc')/geo:SpatialThing/geo:long" id="long-input"/>
				</div>
			</div>
		</div>
		<!--<fr:xforms-inspector/>-->
	</body>
</html>
